<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PostgreSQL定位问题时常用SQL</title>
      <link href="/posts/f1ecacbb.html"/>
      <url>/posts/f1ecacbb.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、查看当前正在运行的-SQL"><a href="#一、查看当前正在运行的-SQL" class="headerlink" title="一、查看当前正在运行的 SQL"></a>一、查看当前正在运行的 SQL</h1><h2 id="1-1-SQL-语句"><a href="#1-1-SQL-语句" class="headerlink" title="1.1 SQL 语句"></a>1.1 SQL 语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">procpid, </span><br><span class="line"><span class="keyword">start</span>, </span><br><span class="line">now() <span class="operator">-</span> <span class="keyword">start</span> <span class="keyword">AS</span> lap, </span><br><span class="line">current_query </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">(<span class="keyword">SELECT</span> </span><br><span class="line">backendid, </span><br><span class="line">pg_stat_get_backend_pid(S.backendid) <span class="keyword">AS</span> procpid, </span><br><span class="line">pg_stat_get_backend_activity_start(S.backendid) <span class="keyword">AS</span> <span class="keyword">start</span>, </span><br><span class="line">pg_stat_get_backend_activity(S.backendid) <span class="keyword">AS</span> current_query </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">(<span class="keyword">SELECT</span> pg_stat_get_backend_idset() <span class="keyword">AS</span> backendid) <span class="keyword">AS</span> S </span><br><span class="line">) <span class="keyword">AS</span> S </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">current_query <span class="operator">&lt;&gt;</span> <span class="string">&#x27;idle&#x27;</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">lap <span class="keyword">DESC</span>; </span><br></pre></td></tr></table></figure><h2 id="1-2-字段说明"><a href="#1-2-字段说明" class="headerlink" title="1.2 字段说明"></a>1.2 字段说明</h2><table><thead><tr><th align="center">字段名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">procpid</td><td align="center">进程 id</td></tr><tr><td align="center">start</td><td align="center">进程开始时间</td></tr><tr><td align="center">lap</td><td align="center">经过时间</td></tr><tr><td align="center">current_query</td><td align="center">执行中的 SQL</td></tr></tbody></table><h2 id="1-3-停止正在执行的-SQL"><a href="#1-3-停止正在执行的-SQL" class="headerlink" title="1.3 停止正在执行的 SQL"></a>1.3 停止正在执行的 SQL</h2><h3 id="1-3-1-方法一"><a href="#1-3-1-方法一" class="headerlink" title="1.3.1 方法一"></a>1.3.1 方法一</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_cancel_backend(进程id);</span><br></pre></td></tr></table></figure><h3 id="1-3-2-方法二"><a href="#1-3-2-方法二" class="headerlink" title="1.3.2 方法二"></a>1.3.2 方法二</h3><p>使用系统命令 <code>kill -9 进程id</code></p><h1 id="二、查看当前事务锁等待、持锁信息的-SQL"><a href="#二、查看当前事务锁等待、持锁信息的-SQL" class="headerlink" title="二、查看当前事务锁等待、持锁信息的 SQL"></a>二、查看当前事务锁等待、持锁信息的 SQL</h1><h2 id="2-1-SQL-语句"><a href="#2-1-SQL-语句" class="headerlink" title="2.1 SQL 语句"></a>2.1 SQL 语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span>    </span><br><span class="line">t_wait <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,    </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid<span class="operator">=</span>b.pid <span class="keyword">and</span> <span class="keyword">not</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_run <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,   </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid<span class="operator">=</span>b.pid <span class="keyword">and</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_overlap <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> r.<span class="operator">*</span> <span class="keyword">from</span> t_wait w <span class="keyword">join</span> t_run r <span class="keyword">on</span>   </span><br><span class="line">  (   </span><br><span class="line">    r.locktype <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.locktype <span class="keyword">and</span>   </span><br><span class="line">    r.database <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.database <span class="keyword">and</span>   </span><br><span class="line">    r.relation <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.relation <span class="keyword">and</span>   </span><br><span class="line">    r.page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.page <span class="keyword">and</span>   </span><br><span class="line">    r.tuple <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.tuple <span class="keyword">and</span>   </span><br><span class="line">    r.virtualxid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.virtualxid <span class="keyword">and</span>   </span><br><span class="line">    r.transactionid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.transactionid <span class="keyword">and</span>   </span><br><span class="line">    r.classid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.classid <span class="keyword">and</span>   </span><br><span class="line">    r.objid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objid <span class="keyword">and</span>   </span><br><span class="line">    r.objsubid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objsubid <span class="keyword">and</span>   </span><br><span class="line">    r.pid <span class="operator">&lt;&gt;</span> w.pid   </span><br><span class="line">  )    </span><br><span class="line">),    </span><br><span class="line">t_unionall <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> r.<span class="operator">*</span> <span class="keyword">from</span> t_overlap r    </span><br><span class="line">  <span class="keyword">union</span> <span class="keyword">all</span>    </span><br><span class="line">  <span class="keyword">select</span> w.<span class="operator">*</span> <span class="keyword">from</span> t_wait w    </span><br><span class="line">)    </span><br><span class="line"><span class="keyword">select</span> locktype,datname,relation::regclass,page,tuple,virtualxid,transactionid::text,classid::regclass,objid,objsubid,   </span><br><span class="line">string_agg(   </span><br><span class="line"><span class="string">&#x27;Pid: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> pid <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> pid::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>   </span><br><span class="line"><span class="string">&#x27;Lock_Granted: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> granted::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Mode: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> mode <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> mode::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , FastPath: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> fastpath <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> fastpath::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , VirtualTransaction: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> virtualtransaction <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> virtualtransaction::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Session_State: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> state <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> state::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>   </span><br><span class="line"><span class="string">&#x27;Username: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> usename <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> usename::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Database: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> datname <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> datname::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Client_Addr: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> client_addr <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> client_addr::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Client_Port: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> client_port <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> client_port::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Application_Name: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> application_name <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> application_name::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>    </span><br><span class="line"><span class="string">&#x27;Xact_Start: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> xact_start <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> xact_start::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Query_Start: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> query_start <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> query_start::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Xact_Elapse: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> (now()<span class="operator">-</span>xact_start) <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> (now()<span class="operator">-</span>xact_start)::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Query_Elapse: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> (now()<span class="operator">-</span>query_start) <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> (now()<span class="operator">-</span>query_start)::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>    </span><br><span class="line"><span class="string">&#x27;SQL (Current SQL in Transaction): &#x27;</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>  </span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> query <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> query::text <span class="keyword">end</span>,    </span><br><span class="line">chr(<span class="number">10</span>)<span class="operator">||</span><span class="string">&#x27;--------&#x27;</span><span class="operator">||</span>chr(<span class="number">10</span>)    </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>    </span><br><span class="line">  (  <span class="keyword">case</span> mode    </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;INVALID&#x27;</span> <span class="keyword">then</span> <span class="number">0</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;AccessShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">1</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;RowShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">2</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;RowExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">3</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareUpdateExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">4</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">5</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareRowExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">6</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">7</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;AccessExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">8</span>   </span><br><span class="line">    <span class="keyword">else</span> <span class="number">0</span>   </span><br><span class="line">  <span class="keyword">end</span>  ) <span class="keyword">desc</span>,   </span><br><span class="line">  (<span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">then</span> <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">end</span>)  </span><br><span class="line">) <span class="keyword">as</span> lock_conflict  </span><br><span class="line"><span class="keyword">from</span> t_unionall   </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>   </span><br><span class="line">locktype,datname,relation,page,tuple,virtualxid,transactionid::text,classid,objid,objsubid ;  </span><br></pre></td></tr></table></figure><h2 id="2-2-字段说明"><a href="#2-2-字段说明" class="headerlink" title="2.2 字段说明"></a>2.2 字段说明</h2><table><thead><tr><th align="center">字段名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">locktype</td><td align="center">被锁定的对象类型：relation、extend、page、tuple、transactionid、virtualxid、object、userlock、advisory</td></tr><tr><td align="center">datname</td><td align="center">数据库名</td></tr><tr><td align="center">relation</td><td align="center">如果对象不是表或只是表的一部分，则此值为“NULL”，否则此值是表的OID</td></tr><tr><td align="center">page</td><td align="center">表中的页号，如果对象不是表行（tuple）或表页（relation page），则此值为“NULL”</td></tr><tr><td align="center">tuple</td><td align="center">页内的行号（tuple）</td></tr><tr><td align="center">virtualxid</td><td align="center">虚拟事务id</td></tr><tr><td align="center">transactionid</td><td align="center">事务id</td></tr><tr><td align="center">classid</td><td align="center">包含该对象系统目录的id</td></tr><tr><td align="center">objid</td><td align="center">对象在系统目录的oid</td></tr><tr><td align="center">objsubid</td><td align="center">如果对象是表列（table column），此列的值为列号，这时classid和objid指向表</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PostgreSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker-compose安装常用中间件</title>
      <link href="/posts/a524c0bb.html"/>
      <url>/posts/a524c0bb.html</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍使用 <code>docker-compose</code> 安装 <code>Redis</code>、<code>Elasticsearch</code>、<code>RabbitMQ</code>、<code>PostgreSQL</code> 这几个组件。</p><h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><p>首先需要安装 docker 并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>然后需要安装 docker-compose</p><p>可以去 github 上下载 docker-compose，将下载的二进制文件放在 <code>/usr/local/bin</code> 目录，然后修改文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>然后输入 <code>docker-compose -v</code> 验证</p><h1 id="二、拉取镜像"><a href="#二、拉取镜像" class="headerlink" title="二、拉取镜像"></a>二、拉取镜像</h1><p>此处使用的几个组件版本分别为：</p><ul><li>ElasticSearch：2.4.6</li><li>Redis：7.0.4</li><li>RabbitMQ：latest</li><li>PostgreSQL：9.6.21</li></ul><p>ElasticSearch 、Redis、PostgreSQL 指定了版本号，RabbitMQ 未指定，使用了最新版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch:2.4.6</span><br><span class="line">docker pull redis:7.0.4</span><br><span class="line">docker pull rabbitmq</span><br><span class="line">docker pull postgres:9.6.21</span><br></pre></td></tr></table></figure><h1 id="三、编辑-docker-compose-yml"><a href="#三、编辑-docker-compose-yml" class="headerlink" title="三、编辑 docker-compose.yml"></a>三、编辑 docker-compose.yml</h1><p>创建一个 <code>docker-compose.yml</code> 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.9&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:2.4.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es-2.4.6-ssl</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#总是重启后启动</span></span><br><span class="line">    <span class="comment">#restart: always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;cluster.name=es-dh&quot;</span> <span class="comment">#设置集群名称为es-dh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;discovery.type=single-node&quot;</span> <span class="comment">#以单一节点模式启动</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms128m -Xmx1024m&quot;</span> <span class="comment">#设置使用jvm内存大小</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/plugins:/usr/share/elasticsearch/plugins</span> <span class="comment">#插件文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/data:/usr/share/elasticsearch/data:rw</span> <span class="comment">#数据文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/logs:/user/share/elasticsearch/logs:rw</span> <span class="comment">#日志文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml</span> <span class="comment">#配置文件挂载</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9300</span><span class="string">:9300</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">es-head:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch-head:5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es-head-5</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9100</span><span class="string">:9100</span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rabbitmq</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rabbitmq:latest</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5672</span><span class="string">:5672</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">15672</span><span class="string">:15672</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/rabbitmq/:/var/lib/rabbitmq</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/rabbitmq/rabbitmq.ssl.config:/etc/rabbitmq/rabbitmq.config</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_VHOST=/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_USER=dh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_PASS=dh</span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:7.0.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-7.0.4-ssl</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl/data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl:/var/lib/redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl/redis.conf:/etc/redis/redis.conf</span></span><br><span class="line">      <span class="comment">#- /dh/volumes/redis/redis-7.0.4-ssl/logs/redis.log:/var/log/redis/redis.log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/server.crt:/var/lib/redis/server.crt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/server.key:/var/lib/redis/server.key</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/ca.crt:/var/lib/redis/ca.crt</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;redis-server&quot;</span>,<span class="string">&quot;/etc/redis/redis.conf&quot;</span>]</span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:9.6.21</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgresql-9.6.21-ssl</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5433</span><span class="string">:5432</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">postgres</span></span><br><span class="line">      <span class="attr">PGDATA:</span> <span class="string">/var/lib/pgsql/9.6/data/</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/pgsql-9.6.21-ssl/data:/var/lib/pgsql/9.6/data/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/server.crt:/var/lib/pgsql/server.crt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/server.key:/var/lib/pgsql/server.key</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/ca.crt:/var/lib/pgsql/ca.crt</span></span><br></pre></td></tr></table></figure><p>从上面可以看到我们挂载了一些文件和目录，对于挂载的文件，需要修改其权限为 777。</p><blockquote><p>需要注意：对于 PostgreSQL需要特殊处理，我们将宿主机的 &#x2F;dh&#x2F;volumes&#x2F;pgsql&#x2F;pgsql-9.6.21-ssl&#x2F;data 目录挂载到容器的 &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;9.6&#x2F;data&#x2F; 目录，宿主机的这个目录必须是一个空目录，否则 PostgreSQL 会启动失败，如果我们想修改配置文件，可以等容器启动后再修改配置文件，然后重启 PostgreSQL。</p><p>由于我们给 PostgreSQL 开启了SSL并挂在了 证书文件，但是 PostgreSQL 的证书文件权限必须为 600 （database user）或 640（root），所以此处我们如果给这三个文件777的权限同样会启动失败，此时我们可以看看挂载的目录里的文件所属用户和所属组，使用chown将这三个证书文件的所属组和用户修改成一样的，并修改权限为600。</p></blockquote><h1 id="四、启动"><a href="#四、启动" class="headerlink" title="四、启动"></a>四、启动</h1><p>执行 <code>docker-compose up -d</code> 启动该文件中定义的所有容器。</p><p>如果想删除所有容器，可以执行 <code>docker-compose down</code></p><p>删除所有已停止的容器，<code>docker-compose rm --stop</code></p><p>删除某个已停止的容器，<code>docker-compose rm --stop $&#123;server_name&#125;</code></p><p>删除某个正在运行的容器， <code>docker-compose rm -f $&#123;service_name&#125;</code></p><p>如果想单独创建某个容器，执行 <code>docker-compose up -d $&#123;server_name&#125;</code></p><p>如果想单独启动或停止某个容器 ，执行 <code>docker-compose start/stop $&#123;server_name&#125;</code></p><h1 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h1><h2 id="5-1-开启-rabbitmq-web管理端"><a href="#5-1-开启-rabbitmq-web管理端" class="headerlink" title="5.1 开启 rabbitmq web管理端"></a>5.1 开启 rabbitmq web管理端</h2><p>进入容器，执行 <code>rabbitmq-plugins enable rabbitmq_management</code></p><p>此时访问管理页面，点击 Channels 可能会报错，解决办法：</p><p>①查看配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf</span><br></pre></td></tr></table></figure><p>注意：文件名可能不是management_agent.disable_metrics_collector.conf，可能是xx-management_agent.disable_metrics_collector.conf，具体的可以看这个目录下面的实际文件名。</p><p><img src="/posts/a524c0bb/image-20230612160800809.png" alt="image-20230612160800809"></p><p>②将配置文件中的 <code>true</code> 修改成 <code>false</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo management_agent.disable_metrics_collector = false &gt; /etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf</span><br></pre></td></tr></table></figure><p>然后退出容器，重启 rabbitmq</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 IDEA 构建 Spring5.3.10 源码</title>
      <link href="/posts/983a1c52.html"/>
      <url>/posts/983a1c52.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>此教程是基于周瑜老师的 <strong>Spring5.3.10 注释版源码</strong>编译的，并不是 Github 原生的 Spring5.3.10 源码，有一些差别，但都是 gradle 配置文件的微小改动，比如把某些依赖从 optional 改成 compile 级别、修改了 gradle 仓库的地址（主要是为了方便编译），其他都没改动。</p></blockquote><h1 id="一、版本"><a href="#一、版本" class="headerlink" title="一、版本"></a>一、版本</h1><ul><li>Spring 版本：5.3.10</li><li>Gradle 版本：6.8</li><li>IDEA 版本：2022.2</li></ul><p><img src="/posts/983a1c52/1685515451815-c83a27f4-385a-42d9-8156-a24808c36be0.png" alt="IDEA 版本"></p><h1 id="二、下载Spring源码所需要的依赖"><a href="#二、下载Spring源码所需要的依赖" class="headerlink" title="二、下载Spring源码所需要的依赖"></a>二、下载Spring源码所需要的依赖</h1><p>因为Spring源码存在很多依赖包，如果自行下载，会需要下很久，所以此处将我自己电脑上已下载的依赖给出：</p><blockquote><p>链接：<a href="https://caiyun.139.com/m/i?005CiN4dFp6mN">https://caiyun.139.com/m/i?005CiN4dFp6mN</a></p><p>提取码：TbOy</p></blockquote><h1 id="三、下载-Spring-源码"><a href="#三、下载-Spring-源码" class="headerlink" title="三、下载 Spring 源码"></a>三、下载 Spring 源码</h1><p>git clone 的地址为：<a href="https://gitee.com/dhpro/spring-framework-5.3.10.git">https://gitee.com/dhpro/spring-framework-5.3.10.git</a></p><p>建议直接用 IDEA 的 git 来下载源码：</p><p><img src="/posts/983a1c52/1685515617531-5c3d6c65-6af1-42be-8572-11f4717c6fa4.png" alt="New Project"></p><p><img src="/posts/983a1c52/1685515622726-73454c6c-2a1f-448b-8e14-6080485a8a56.png" alt="Clone"></p><p>输入地址，点击 Clone，就会开始下载源码工程（因为是从 gitee 上下载，所以会比从 github 上下载快很多)。 一旦下载完成，IDEA 就会自动下载 gradle，下载完 gradle 就会开始下载 Spring 源码依赖，但是我们已经有现成的了，所以可以直接取消这个过程。</p><h1 id="四、修改IDEA的gradle配置"><a href="#四、修改IDEA的gradle配置" class="headerlink" title="四、修改IDEA的gradle配置"></a>四、修改IDEA的gradle配置</h1><p><img src="/posts/983a1c52/1685515713115-b417e4cf-fa0e-4376-b06b-b524e144cbe9.png" alt="Gradle 配置"></p><p>首先把 gradle user home 改为 <strong>.gradle压缩包</strong> 的解压之后的文件路径，</p><p>然后把 Build and run using 和 Run tests using 都改为 IntelliJ IDEA，</p><p>改完之后点击 Apply，再点击 OK，会自动触发 gradle 的重新编译。</p><h1 id="五、运行代码"><a href="#五、运行代码" class="headerlink" title="五、运行代码"></a>五、运行代码</h1><p>编译成功后，在左侧可以看到如下模块，其中有一个 tuling 模块，这是一个可以直接运行的模块，在它下面有一个 Test 类，直接运行 main 方法。</p><p><img src="/posts/983a1c52/1685515818638-aa54c79e-7e57-4441-9757-ea00a0bf6274.png" alt="Test"></p><h2 id="5-1-运行过程中可能出现的问题"><a href="#5-1-运行过程中可能出现的问题" class="headerlink" title="5.1 运行过程中可能出现的问题"></a>5.1 运行过程中可能出现的问题</h2><h3 id="5-1-1-问题一"><a href="#5-1-1-问题一" class="headerlink" title="5.1.1 问题一"></a>5.1.1 问题一</h3><p>我在运行的时候出现了以下错误：</p><p><img src="/posts/983a1c52/1685515894900-3d9a036b-beaf-4505-a394-039d87d10d82.png" alt="报错 1"></p><p>由于报错的是 core 模块，所以在 gradle 中找到 core 模块，先执行 clean，然后 build，执行完毕后重新运行程序，问题解决。</p><p><img src="/posts/983a1c52/1685515903538-7acd0039-35d6-48d3-8535-bd3659e3bbc8.png" alt="Clean"></p><p><img src="/posts/983a1c52/1685515909414-1dbb5934-710e-4d30-bc59-a1e4b47d51ce.png" alt="运行成功截图"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 框架 </category>
          
          <category> Spring </category>
          
          <category> Spring-5.3.10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arthas</title>
      <link href="/posts/e1a71cf6.html"/>
      <url>/posts/e1a71cf6.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><h2 id="1-1-什么是-Arthas"><a href="#1-1-什么是-Arthas" class="headerlink" title="1.1 什么是 Arthas"></a>1.1 什么是 Arthas</h2><p>Arthas 是一款线上监控诊断产品，通过全局视角实时查看应用 load、内存、gc、线程的状态信息，并能在不修改应用代码的情况下，对业务问题进行诊断，包括查看方法调用的出入参、异常，监测方法执行耗时，类加载信息等，大大提升线上问题排查效率。</p><h2 id="1-2-下载-Arthas"><a href="#1-2-下载-Arthas" class="headerlink" title="1.2 下载 Arthas"></a>1.2 下载 Arthas</h2><p>下载地址：<a href="https://arthas.aliyun.com/download/latest_version?mirror=aliyun">https://arthas.aliyun.com/download/latest_version?mirror=aliyun</a></p><h2 id="1-3-启动方式"><a href="#1-3-启动方式" class="headerlink" title="1.3 启动方式"></a>1.3 启动方式</h2><p>将下载的文件解压后，可以看到有 <code>as.sh</code>和 <code>arthas-boot.jar</code>，有两种启动方式</p><ul><li>直接执行 <code>./as.sh</code>启动</li><li>执行 <code>java -jar arthas-boot.jar</code>启动</li></ul><blockquote><p>需要注意的是：使用和目标进程一致的用户启动，否则可能 attach 失败</p><ul><li>执行该程序的用户需要和目标进程具有相同的权限。比如以 <code>admin</code>用户来执行：<code>sudo su admin &amp;&amp; java -jar arthas-boot.jar</code>或 <code>sudo -u admin -EH java -jar arthas-boot.jar</code>。</li><li>如果 attach 不上目标进程，可以查看<code>~/logs/arthas/</code>目录下的日志。</li></ul></blockquote><p>执行成功后会显示 Java 进程信息，输入对应的数字序号后回车，Arthas 会 attach 到目标进程上，并输出日志。</p><h5 id><a href="#" class="headerlink" title></a><img src="/posts/e1a71cf6/1685446464667-5b9471f9-ff69-4e3e-a665-9235f11676cb.png" alt="启动截图"></h5><h1 id="二、命令列表及其使用"><a href="#二、命令列表及其使用" class="headerlink" title="二、命令列表及其使用"></a>二、命令列表及其使用</h1><h2 id="2-1-JVM-相关"><a href="#2-1-JVM-相关" class="headerlink" title="2.1 JVM 相关"></a>2.1 JVM 相关</h2><h3 id="2-1-1-dashboard-当前系统的实时数据面板"><a href="#2-1-1-dashboard-当前系统的实时数据面板" class="headerlink" title="2.1.1 dashboard - 当前系统的实时数据面板"></a>2.1.1 dashboard - 当前系统的实时数据面板</h3><h4 id="2-1-1-1-作用"><a href="#2-1-1-1-作用" class="headerlink" title="2.1.1.1 作用"></a>2.1.1.1 作用</h4><p>显示当前系统的实时数据面板，按 <code>ctrl+c</code>退出。</p><h4 id="2-1-1-2-参数说明"><a href="#2-1-1-2-参数说明" class="headerlink" title="2.1.1.2 参数说明"></a>2.1.1.2 参数说明</h4><table><thead><tr><th align="center"><strong>参数名称</strong></th><th align="center"><strong>参数说明</strong></th></tr></thead><tbody><tr><td align="center">[i:]</td><td align="center">刷新实时数据的时间间隔 (ms)，默认 5000ms</td></tr><tr><td align="center">[n:]</td><td align="center">刷新实时数据的次数</td></tr></tbody></table><p>实例：<code>dashboard -i 1000 -n 2</code> ：每1000ms刷新一次，刷新两次。</p><h4 id="2-1-1-3-数据说明"><a href="#2-1-1-3-数据说明" class="headerlink" title="2.1.1.3 数据说明"></a>2.1.1.3 数据说明</h4><p><img src="/posts/e1a71cf6/1685498254758-2eb0afda-67ca-4d45-9a87-c3c08b555c70.png" alt="dashboard运行截图"></p><ul><li>ID: Java 级别的线程 ID，注意这个 ID 不能跟 jstack 中的 nativeID 一一对应。</li><li>NAME: 线程名</li><li>GROUP: 线程组名</li><li>PRIORITY: 线程优先级, 1~10 之间的数字，越大表示优先级越高</li><li>STATE: 线程的状态</li><li>CPU%: 线程的 cpu 使用率。比如采样间隔 1000ms，某个线程的增量 cpu 时间为 100ms，则 cpu 使用率&#x3D;100&#x2F;1000&#x3D;10%</li><li>DELTA_TIME: 上次采样之后线程运行增量 CPU 时间，数据格式为秒</li><li>TIME: 线程运行总 CPU 时间，数据格式为分:秒</li><li>INTERRUPTED: 线程当前的中断位状态</li><li>DAEMON: 是否是 daemon 线程</li></ul><p>从上图中可以看到有些线程的 ID、PRIORITY 为-1，且没有状态等属性，这是因为这些线程是 JVM 内部线程。</p><h4 id="2-1-1-4-JVM-内部线程"><a href="#2-1-1-4-JVM-内部线程" class="headerlink" title="2.1.1.4 JVM 内部线程"></a>2.1.1.4 JVM 内部线程</h4><p>Java 8 之后支持获取 JVM 内部线程 CPU 时间，这些线程只有名称和 CPU 时间，没有 ID 及状态等信息（显示 ID 为-1）。 通过内部线程可以观测到 JVM 活动，如 GC、JIT 编译等占用 CPU 情况，方便了解 JVM 整体运行状况。</p><ul><li>当 JVM 堆(heap)&#x2F;元数据(metaspace)空间不足或 OOM 时，可以看到 GC 线程的 CPU 占用率明显高于其他的线程。</li><li>当执行 <code>trace/watch/tt/redefine</code>等命令后，可以看到 JIT 线程活动变得更频繁。因为 JVM 热更新 class 字节码时清除了此 class 相关的 JIT 编译结果，需要重新编译。</li></ul><p>JVM 内部线程包括下面几种：</p><ul><li>JIT 编译线程: 如 <code>C2 CompilerThread0</code>, <code>C1 CompilerThread2</code></li><li>GC 线程: 如 <code>GC Thread0</code>, <code>G1 Young RemSet Sampling</code></li><li>其它内部线程: 如 <code>VM Periodic Task Thread</code>, <code>VM Thread</code>, <code>Service Thread</code></li></ul><h3 id="2-1-2-ognl-执行-ognl-表达式"><a href="#2-1-2-ognl-执行-ognl-表达式" class="headerlink" title="2.1.2 ognl - 执行 ognl 表达式"></a>2.1.2 ognl - 执行 ognl 表达式</h3><h4 id="2-1-2-1-作用"><a href="#2-1-2-1-作用" class="headerlink" title="2.1.2.1 作用"></a>2.1.2.1 作用</h4><p>执行 ognl 表达式</p><h4 id="2-1-2-2-参数说明"><a href="#2-1-2-2-参数说明" class="headerlink" title="2.1.2.2 参数说明"></a>2.1.2.2 参数说明</h4><table><thead><tr><th align="center"><strong>参数名称</strong></th><th align="center"><strong>参数说明</strong></th></tr></thead><tbody><tr><td align="center"><em>express</em></td><td align="center">执行的表达式</td></tr><tr><td align="center">[c:]</td><td align="center">执行表达式的 ClassLoader 的 hashcode，默认值是 SystemClassLoader</td></tr><tr><td align="center">[classLoaderClass:]</td><td align="center">指定执行表达式的 ClassLoader 的 class name</td></tr><tr><td align="center">[x]</td><td align="center">结果对象的展开层次，默认值 1</td></tr></tbody></table><h4 id="2-1-2-3-ognl-表达式说明"><a href="#2-1-2-3-ognl-表达式说明" class="headerlink" title="2.1.2.3 ognl 表达式说明"></a>2.1.2.3 ognl 表达式说明</h4><h5 id="2-1-2-3-1-语法"><a href="#2-1-2-3-1-语法" class="headerlink" title="2.1.2.3.1 语法"></a>2.1.2.3.1 语法</h5><p>基本的 OGNL 表达式非常简单。该语言的特性已经变得非常丰富，但是您通常不需要担心该语言中更复杂的部分：简单的情况仍然如此。例如，要获取对象的 name 属性，OGNL 表达式就是 <code>name</code>。要获取由 headline 属性返回的对象的 text 属性，OGNL 表达式是 <code>headline.text</code>。</p><p>OGNL 表达式的基本单元是导航链，通常简称为“链”。最简单的链条由以下部分组成：</p><table><thead><tr><th align="center"><strong>表达式元素部分</strong></th><th align="center"><strong>例子</strong></th></tr></thead><tbody><tr><td align="center">属性名称</td><td align="center">比如上面示例中的 <code>name</code>和 <code>headline.text</code>。</td></tr><tr><td align="center">方法调用</td><td align="center"><code>hashCode()</code>返回当前对象的哈希码</td></tr><tr><td align="center">数组索引</td><td align="center"><code>listeners[0]</code>返回当前对象 listeners 列表中的第一个</td></tr></tbody></table><p>所有 OGNL 表达式都在当前对象的上下文中求值，而链只是使用链中前一个链接的结果作为下一个链接的当前对象。你想把链条拉长多长都行。例如，这条链：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name.toCharArray()[0].numericValue.toString()</span><br></pre></td></tr></table></figure><p>这个表达式按照以下步骤进行计算：</p><ol><li>提取初始或根对象（用户通过 OGNL 上下文提供给 OGNL ）的 name 属性；</li><li>在结果字符串上调用 toCharArray() 方法；</li><li>从结果数组中提取第一个字符（索引为0的字符）；</li><li>从该字符获取 numericValue 属性(字符表示为 <code>Character</code>对象，<code>Character</code>类有一个名为 getNumericValue() 的方法)。</li><li>在结果 Integer 对象上调用 toString()。这个表达式的最终结果是最后一次 toString() 调用返回的 String。</li></ol><p>请注意，这个示例只能用于从对象获取值，而不能用于设置值。将上述表达式传递给 Ognl.setValue() 方法将导致InappropriateExpressionException被抛出，因为链中的最后一个链接既不是属性名也不是数组索引。</p><h5 id="2-1-2-3-2-表达式"><a href="#2-1-2-3-2-表达式" class="headerlink" title="2.1.2.3.2 表达式"></a>2.1.2.3.2 表达式</h5><p>本节概述了 OGNL 表达式元素的细节。</p><p><strong>常量</strong></p><p>OGNL 有以下几种常量：</p><ul><li>String 字面值，如 Java 中由单引号或双引号分隔，并带有完整的转义集；</li><li>Character 字面量，也与 Java 一样：由单引号分隔，也带有全套转义；</li><li>数字字面值，比 Java 多一些类型。除了 Java 的整型、长型、浮点数和双精度外，OGNL 还允许您指定带有“b”或“b”后缀的 BigDecimals，以及带有“h”或“h”后缀的 BigIntegers(想想“huge”——我们选择了“h”表示)；</li><li>Boolean：true 或者 false；</li><li>null</li></ul><p><strong>引用属性</strong></p><p>OGNL 在处理属性引用时以不同的方式对待不同类型的对象。映射将所有属性引用视为元素查找或存储，并将属性名称作为键。列表和数组类似地处理数字属性，以属性名作为索引，但处理字符串属性的方式与普通对象相同。普通对象（即所有其他类型的对象）只能通过使用“get”和“set”方法（或“is”和“set”）处理字符串属性，如果对象有这些方法，或者使用给定名称的字段处理字符串属性。</p><p>注意这里的新术语。属性“名称”可以是任何类型，而不仅仅是字符串。但是要引用非字符串属性，必须使用我们一直称为“索引”的符号。例如，要获取一个数组的长度，你可以使用这个表达式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.length</span><br></pre></td></tr></table></figure><p>但是要获取数组的元素0，你必须使用这样的表达式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[0]</span><br></pre></td></tr></table></figure><p><strong>索引</strong></p><p>如上所述，“索引”表示法实际上只是属性引用，尽管是一种计算形式的属性引用，而不是常数形式。<br>例如，OGNL在内部处理 <code>array.length</code>表达式与这个表达式完全相同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[&quot;length&quot;]</span><br></pre></td></tr></table></figure><p>这个表达式会有相同的结果（尽管内部形式不同）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[&quot;len&quot; + &quot;gth&quot;]</span><br></pre></td></tr></table></figure><h3 id="2-1-3-getstatic-查看类的静态属性"><a href="#2-1-3-getstatic-查看类的静态属性" class="headerlink" title="2.1.3 getstatic - 查看类的静态属性"></a>2.1.3 getstatic - 查看类的静态属性</h3><h3 id="2-1-4-heapdump-dump-java-heap-类似-jmap-命令的-heap-dump-功能"><a href="#2-1-4-heapdump-dump-java-heap-类似-jmap-命令的-heap-dump-功能" class="headerlink" title="2.1.4 heapdump - dump java heap, 类似 jmap 命令的 heap dump 功能"></a>2.1.4 heapdump - dump java heap, 类似 jmap 命令的 heap dump 功能</h3><h3 id="2-1-5-jvm-查看当前-JVM-的信息"><a href="#2-1-5-jvm-查看当前-JVM-的信息" class="headerlink" title="2.1.5 jvm - 查看当前 JVM 的信息"></a>2.1.5 jvm - 查看当前 JVM 的信息</h3><h3 id="2-1-6-logger-查看和修改-logger"><a href="#2-1-6-logger-查看和修改-logger" class="headerlink" title="2.1.6 logger - 查看和修改 logger"></a>2.1.6 logger - 查看和修改 logger</h3><h3 id="2-1-7-mbean-查看-Mbean-的信息"><a href="#2-1-7-mbean-查看-Mbean-的信息" class="headerlink" title="2.1.7 mbean - 查看 Mbean 的信息"></a>2.1.7 mbean - 查看 Mbean 的信息</h3><h3 id="2-1-8-memory-查看-JVM-的内存信息"><a href="#2-1-8-memory-查看-JVM-的内存信息" class="headerlink" title="2.1.8 memory - 查看 JVM 的内存信息"></a>2.1.8 memory - 查看 JVM 的内存信息</h3><h3 id="2-1-9-perfcounter-查看当前-JVM-的-Perf-Counter-信息"><a href="#2-1-9-perfcounter-查看当前-JVM-的-Perf-Counter-信息" class="headerlink" title="2.1.9 perfcounter - 查看当前 JVM 的 Perf Counter 信息"></a>2.1.9 perfcounter - 查看当前 JVM 的 Perf Counter 信息</h3><h3 id="2-1-10-sysenv-查看-JVM-的环境变量"><a href="#2-1-10-sysenv-查看-JVM-的环境变量" class="headerlink" title="2.1.10 sysenv - 查看 JVM 的环境变量"></a>2.1.10 sysenv - 查看 JVM 的环境变量</h3><h3 id="2-1-11-sysprop-查看和修改-JVM-的系统属性"><a href="#2-1-11-sysprop-查看和修改-JVM-的系统属性" class="headerlink" title="2.1.11 sysprop - 查看和修改 JVM 的系统属性"></a>2.1.11 sysprop - 查看和修改 JVM 的系统属性</h3><h3 id="2-1-12-thread-查看当前-JVM-的线程堆栈信息"><a href="#2-1-12-thread-查看当前-JVM-的线程堆栈信息" class="headerlink" title="2.1.12 thread - 查看当前 JVM 的线程堆栈信息"></a>2.1.12 thread - 查看当前 JVM 的线程堆栈信息</h3><h3 id="2-1-13-vmoption-查看和修改-JVM-里诊断相关的-option"><a href="#2-1-13-vmoption-查看和修改-JVM-里诊断相关的-option" class="headerlink" title="2.1.13 vmoption - 查看和修改 JVM 里诊断相关的 option"></a>2.1.13 vmoption - 查看和修改 JVM 里诊断相关的 option</h3><h3 id="2-1-14-vmtool-从-jvm-里查询对象"><a href="#2-1-14-vmtool-从-jvm-里查询对象" class="headerlink" title="2.1.14 vmtool - 从 jvm 里查询对象"></a>2.1.14 vmtool - 从 jvm 里查询对象</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 调试工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arthas </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
