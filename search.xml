<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-butterfly主题添加giscus评论系统</title>
      <link href="/posts/98e7102d.html"/>
      <url>/posts/98e7102d.html</url>
      
        <content type="html"><![CDATA[<p> 具体操作如下所示：</p><h1 id="一、创建仓库"><a href="#一、创建仓库" class="headerlink" title="一、创建仓库"></a>一、创建仓库</h1><p><img src="/posts/98e7102d/image-20240228102747051.png" alt="image-20240228102747051"></p><h1 id="二、安装-giscus"><a href="#二、安装-giscus" class="headerlink" title="二、安装 giscus"></a>二、安装 giscus</h1><p>安装链接：<a href="https://github.com/marketplace/giscus">giscus</a></p><blockquote><p>到页面底部，点击 Install it for free</p></blockquote><p><img src="/posts/98e7102d/image-20240228103359799.png" alt="image-20240228103359799"></p><blockquote><p>填写完信息后保存</p></blockquote><p><img src="/posts/98e7102d/image-20240228110240077.png" alt="image-20240228110240077"></p><blockquote><p>然后点击 Complete order and begin installation</p></blockquote><p><img src="/posts/98e7102d/image-20240228110819075.png" alt="image-20240228110819075"></p><blockquote><p>选择刚才创建的仓库，然后 Install</p></blockquote><p><img src="/posts/98e7102d/image-20240228111013560.png" alt="image-20240228111013560"></p><p>到这里，giscus 就已经安装完了。接下来，我们要去配置仓库的 Discussions 部分</p><h1 id="三、配置仓库的-Discussions-部分"><a href="#三、配置仓库的-Discussions-部分" class="headerlink" title="三、配置仓库的 Discussions 部分"></a>三、配置仓库的 Discussions 部分</h1><blockquote><p>打开仓库的 setting，勾选 Discussions 部分</p></blockquote><p><img src="/posts/98e7102d/image-20240228111344873.png" alt="image-20240228111344873"></p><h1 id="四、配置-giscus"><a href="#四、配置-giscus" class="headerlink" title="四、配置 giscus"></a>四、配置 giscus</h1><p>链接地址：<a href="https://giscus.app/zh-CN">giscus 配置</a></p><blockquote><p>仓库填写 用户名&#x2F;仓库名称</p></blockquote><p><img src="/posts/98e7102d/image-20240228112134948.png" alt="image-20240228112134948"></p><blockquote><p>复制启用 giscus 下方的代码块，里面的内容下面会用到</p></blockquote><p><img src="/posts/98e7102d/image-20240228112317897.png" alt="image-20240228112317897"></p><h1 id="五、butterfly-主题配置"><a href="#五、butterfly-主题配置" class="headerlink" title="五、butterfly 主题配置"></a>五、butterfly 主题配置</h1><p>打开 butterfly 主题配置文件，修改以下两处：</p><ol><li>找到下面的 comments 配置，修改 <code>use </code> 配置项为 <code>giscus</code></li></ol><p><img src="/posts/98e7102d/image-20240228113549006.png" alt="image-20240228113549006"></p><ol start="2"><li>找到下面的 giscus 配置，根据上面代码块中的信息，将对应的值填进去即可</li></ol><p><img src="/posts/98e7102d/image-20240228112705545.png" alt="image-20240228112705545"></p><p>现在， 博客文章部分就有了下边的评论区：</p><p><img src="/posts/98e7102d/image-20240228113724896.png" alt="image-20240228113724896"></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloudAlibaba入门</title>
      <link href="/posts/4c20f373.html"/>
      <url>/posts/4c20f373.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、使用IDEA搭建一个分布式的项目"><a href="#一、使用IDEA搭建一个分布式的项目" class="headerlink" title="一、使用IDEA搭建一个分布式的项目"></a>一、使用IDEA搭建一个分布式的项目</h1><h2 id="1-1-创建基于SpringBoot的父工程"><a href="#1-1-创建基于SpringBoot的父工程" class="headerlink" title="1.1 创建基于SpringBoot的父工程"></a>1.1 创建基于SpringBoot的父工程</h2><p><img src="/posts/4c20f373/image-20230805113356388.png" alt="image-20230805113356388"></p><p>创建完成之后修改 <code>pom.xml</code> 文件，加上 <code>&lt;packaging&gt;pom&lt;/packaging&gt;</code></p><p><img src="/posts/4c20f373/image-20230805113629572.png" alt="image-20230805113629572"></p><p>父工程的 <code>src</code> 目录我们也不需要用到，所以可以删除</p><p><img src="/posts/4c20f373/image-20230805113825643.png" alt="image-20230805113825643"></p><h2 id="1-2-创建两个子模块（订单模块和库存模块）"><a href="#1-2-创建两个子模块（订单模块和库存模块）" class="headerlink" title="1.2 创建两个子模块（订单模块和库存模块）"></a>1.2 创建两个子模块（订单模块和库存模块）</h2><h3 id="1-2-1-创建子模块"><a href="#1-2-1-创建子模块" class="headerlink" title="1.2.1 创建子模块"></a>1.2.1 创建子模块</h3><p><img src="/posts/4c20f373/image-20230805113943130.png" alt="image-20230805113943130"></p><p><img src="/posts/4c20f373/image-20230805115150860.png" alt="image-20230805115150860"></p><p><img src="/posts/4c20f373/image-20230805115214908.png" alt="image-20230805115214908"></p><h3 id="1-2-2-添加依赖"><a href="#1-2-2-添加依赖" class="headerlink" title="1.2.2 添加依赖"></a>1.2.2 添加依赖</h3><p>在 order 和 stock 两个子模块的 pom.xml 文件中添加如下依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-3-在-order-模块中使用-RestTemplate-调用-stock-模块"><a href="#1-3-在-order-模块中使用-RestTemplate-调用-stock-模块" class="headerlink" title="1.3 在 order 模块中使用 RestTemplate 调用 stock 模块"></a>1.3 在 order 模块中使用 RestTemplate 调用 stock 模块</h2><h3 id="1-3-1-添加SpringBoot启动类"><a href="#1-3-1-添加SpringBoot启动类" class="headerlink" title="1.3.1 添加SpringBoot启动类"></a>1.3.1 添加SpringBoot启动类</h3><h4 id="1-3-1-1-order-模块"><a href="#1-3-1-1-order-模块" class="headerlink" title="1.3.1.1 order 模块"></a>1.3.1.1 order 模块</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(OrderApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">(RestTemplateBuilder builder)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-1-2-stock-模块"><a href="#1-3-1-2-stock-模块" class="headerlink" title="1.3.1.2 stock 模块"></a>1.3.1.2 stock 模块</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StockApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(StockApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-3-2-添加配置文件"><a href="#1-3-2-添加配置文件" class="headerlink" title="1.3.2 添加配置文件"></a>1.3.2 添加配置文件</h3><p>在 <code>resources</code> 目录下添加 <code>application.yml</code> 文件</p><h4 id="1-3-2-1-order-模块"><a href="#1-3-2-1-order-模块" class="headerlink" title="1.3.2.1 order 模块"></a>1.3.2.1 order 模块</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8010</span></span><br></pre></td></tr></table></figure><h4 id="1-3-2-2-stock模块"><a href="#1-3-2-2-stock模块" class="headerlink" title="1.3.2.2 stock模块"></a>1.3.2.2 stock模块</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8011</span></span><br></pre></td></tr></table></figure><h3 id="1-3-3-添加-Controller-接口"><a href="#1-3-3-添加-Controller-接口" class="headerlink" title="1.3.3 添加 Controller 接口"></a>1.3.3 添加 Controller 接口</h3><h4 id="1-3-3-1-order模块"><a href="#1-3-3-1-order模块" class="headerlink" title="1.3.3.1 order模块"></a>1.3.3.1 order模块</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/order&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/add&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;下单成功&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> restTemplate.getForObject(<span class="string">&quot;http://127.0.0.1:8011/stock/reduce&quot;</span>, String.class);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World &quot;</span> + msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-3-2-stock-模块"><a href="#1-3-3-2-stock-模块" class="headerlink" title="1.3.3.2 stock 模块"></a>1.3.3.2 stock 模块</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;stock&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StockController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;reduce&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">reduce</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;扣减库存&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;扣减库存&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-3-3-调用"><a href="#1-3-3-3-调用" class="headerlink" title="1.3.3.3 调用"></a>1.3.3.3 调用</h4><p>运行 order 模块和 stock 模块，在浏览器中请求 <code>http://localhost:8010/order/add</code></p><p><img src="/posts/4c20f373/image-20230805134541542.png" alt="image-20230805134541542"></p><h1 id="二、Spring-Cloud-Alibab-环境搭建"><a href="#二、Spring-Cloud-Alibab-环境搭建" class="headerlink" title="二、Spring Cloud Alibab 环境搭建"></a>二、Spring Cloud Alibab 环境搭建</h1><h2 id="2-1-版本说明"><a href="#2-1-版本说明" class="headerlink" title="2.1 版本说明"></a>2.1 版本说明</h2><p>最新版可以在此地址查看：<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E</a></p><h3 id="2-1-1-毕业版本依赖关系-推荐使用"><a href="#2-1-1-毕业版本依赖关系-推荐使用" class="headerlink" title="2.1.1 毕业版本依赖关系(推荐使用)"></a>2.1.1 毕业版本依赖关系(推荐使用)</h3><h4 id="2-1-1-1-2022-x-分支"><a href="#2-1-1-1-2022-x-分支" class="headerlink" title="2.1.1.1 2022.x 分支"></a>2.1.1.1 2022.x 分支</h4><p>适配 Spring Boot 3.0，Spring Cloud 2022.x 版本及以上的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）： (注意，该分支 Spring Cloud Alibaba 版本命名方式进行了调整，未来将对应 Spring Cloud 版本，前三位为 Spring Cloud 版本，最后一位为扩展版本，比如适配 Spring Cloud 2022.0.0 版本对应的 Spring Cloud Alibaba 第一个版本为：2022.0.0.0，第个二版本为：2022.0.0.1，依此类推)</p><table><thead><tr><th align="center">Spring Cloud Alibaba Version</th><th align="center">Spring Cloud Version</th><th align="center">Spring Boot Version</th></tr></thead><tbody><tr><td align="center">2022.0.0.0*</td><td align="center">Spring Cloud 2022.0.0</td><td align="center">3.0.2</td></tr><tr><td align="center">2022.0.0.0-RC2</td><td align="center">Spring Cloud 2022.0.0</td><td align="center">3.0.2</td></tr><tr><td align="center">2022.0.0.0-RC1</td><td align="center">Spring Cloud 2022.0.0</td><td align="center">3.0.0</td></tr></tbody></table><h4 id="2-1-1-2-2021-x-分支"><a href="#2-1-1-2-2021-x-分支" class="headerlink" title="2.1.1.2 2021.x 分支"></a>2.1.1.2 2021.x 分支</h4><p>适配 Spring Boot 2.4，Spring Cloud 2021.x 版本及以上的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）：</p><table><thead><tr><th align="center">Spring Cloud Alibaba Version</th><th align="center">Spring Cloud Version</th><th align="center">Spring Boot Version</th></tr></thead><tbody><tr><td align="center">2021.0.5.0*</td><td align="center">Spring Cloud 2021.0.5</td><td align="center">2.6.13</td></tr><tr><td align="center">2021.0.4.0</td><td align="center">Spring Cloud 2021.0.4</td><td align="center">2.6.11</td></tr><tr><td align="center">2021.0.1.0</td><td align="center">Spring Cloud 2021.0.1</td><td align="center">2.6.3</td></tr><tr><td align="center">2021.1</td><td align="center">Spring Cloud 2020.0.1</td><td align="center">2.4.2</td></tr></tbody></table><h4 id="2-1-1-3-2-2-x-分支"><a href="#2-1-1-3-2-2-x-分支" class="headerlink" title="2.1.1.3 2.2.x 分支"></a>2.1.1.3 2.2.x 分支</h4><p>适配 Spring Boot 为 2.4，Spring Cloud Hoxton 版本及以下的 Spring Cloud Alibaba 版本按从新到旧排列如下表（最新版本用*标记）：</p><table><thead><tr><th align="center">Spring Cloud Alibaba Version</th><th align="center">Spring Cloud Version</th><th align="center">Spring Boot Version</th></tr></thead><tbody><tr><td align="center">2.2.10-RC1*</td><td align="center">Spring Cloud Hoxton.SR12</td><td align="center">2.3.12.RELEASE</td></tr><tr><td align="center">2.2.9.RELEASE</td><td align="center">Spring Cloud Hoxton.SR12</td><td align="center">2.3.12.RELEASE</td></tr><tr><td align="center">2.2.8.RELEASE</td><td align="center">Spring Cloud Hoxton.SR12</td><td align="center">2.3.12.RELEASE</td></tr><tr><td align="center">2.2.7.RELEASE</td><td align="center">Spring Cloud Hoxton.SR12</td><td align="center">2.3.12.RELEASE</td></tr><tr><td align="center">2.2.6.RELEASE</td><td align="center">Spring Cloud Hoxton.SR9</td><td align="center">2.3.2.RELEASE</td></tr><tr><td align="center">2.2.1.RELEASE</td><td align="center">Spring Cloud Hoxton.SR3</td><td align="center">2.2.5.RELEASE</td></tr><tr><td align="center">2.2.0.RELEASE</td><td align="center">Spring Cloud Hoxton.RELEASE</td><td align="center">2.2.X.RELEASE</td></tr><tr><td align="center">2.1.4.RELEASE</td><td align="center">Spring Cloud Greenwich.SR6</td><td align="center">2.1.13.RELEASE</td></tr><tr><td align="center">2.1.2.RELEASE</td><td align="center">Spring Cloud Greenwich</td><td align="center">2.1.X.RELEASE</td></tr><tr><td align="center">2.0.4.RELEASE(停止维护，建议升级)</td><td align="center">Spring Cloud Finchley</td><td align="center">2.0.X.RELEASE</td></tr><tr><td align="center">1.5.1.RELEASE(停止维护，建议升级)</td><td align="center">Spring Cloud Edgware</td><td align="center">1.5.X.RELEASE</td></tr></tbody></table><h3 id="2-1-2-组件版本关系"><a href="#2-1-2-组件版本关系" class="headerlink" title="2.1.2 组件版本关系"></a>2.1.2 组件版本关系</h3><p>每个 Spring Cloud Alibaba 版本及其自身所适配的各组件对应版本如下表所示（注意，Spring Cloud Dubbo 从 2021.0.1.0 起已被移除出主干，不再随主干演进）：</p><table><thead><tr><th align="center">Spring Cloud Alibaba Version</th><th align="center">Sentinel Version</th><th align="center">Nacos Version</th><th align="center">RocketMQ Version</th><th align="center">Dubbo Version</th><th align="center">Seata Version</th></tr></thead><tbody><tr><td align="center">2022.0.0.0</td><td align="center">1.8.6</td><td align="center">2.2.1</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.7.0</td></tr><tr><td align="center">2022.0.0.0-RC2</td><td align="center">1.8.6</td><td align="center">2.2.1</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.7.0-native-rc2</td></tr><tr><td align="center">2021.0.5.0</td><td align="center">1.8.6</td><td align="center">2.2.0</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.6.1</td></tr><tr><td align="center">2.2.10-RC1</td><td align="center">1.8.6</td><td align="center">2.2.0</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.6.1</td></tr><tr><td align="center">2022.0.0.0-RC1</td><td align="center">1.8.6</td><td align="center">2.2.1-RC</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.6.1</td></tr><tr><td align="center">2.2.9.RELEASE</td><td align="center">1.8.5</td><td align="center">2.1.0</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.5.2</td></tr><tr><td align="center">2021.0.4.0</td><td align="center">1.8.5</td><td align="center">2.0.4</td><td align="center">4.9.4</td><td align="center">~</td><td align="center">1.5.2</td></tr><tr><td align="center">2.2.8.RELEASE</td><td align="center">1.8.4</td><td align="center">2.1.0</td><td align="center">4.9.3</td><td align="center">~</td><td align="center">1.5.1</td></tr><tr><td align="center">2021.0.1.0</td><td align="center">1.8.3</td><td align="center">1.4.2</td><td align="center">4.9.2</td><td align="center">~</td><td align="center">1.4.2</td></tr><tr><td align="center">2.2.7.RELEASE</td><td align="center">1.8.1</td><td align="center">2.0.3</td><td align="center">4.6.1</td><td align="center">2.7.13</td><td align="center">1.3.0</td></tr><tr><td align="center">2.2.6.RELEASE</td><td align="center">1.8.1</td><td align="center">1.4.2</td><td align="center">4.4.0</td><td align="center">2.7.8</td><td align="center">1.3.0</td></tr><tr><td align="center">2021.1 or 2.2.5.RELEASE or 2.1.4.RELEASE or 2.0.4.RELEASE</td><td align="center">1.8.0</td><td align="center">1.4.1</td><td align="center">4.4.0</td><td align="center">2.7.8</td><td align="center">1.3.0</td></tr><tr><td align="center">2.2.3.RELEASE or 2.1.3.RELEASE or 2.0.3.RELEASE</td><td align="center">1.8.0</td><td align="center">1.3.3</td><td align="center">4.4.0</td><td align="center">2.7.8</td><td align="center">1.3.0</td></tr><tr><td align="center">2.2.1.RELEASE or 2.1.2.RELEASE or 2.0.2.RELEASE</td><td align="center">1.7.1</td><td align="center">1.2.1</td><td align="center">4.4.0</td><td align="center">2.7.6</td><td align="center">1.2.0</td></tr><tr><td align="center">2.2.0.RELEASE</td><td align="center">1.7.1</td><td align="center">1.1.4</td><td align="center">4.4.0</td><td align="center">2.7.4.1</td><td align="center">1.0.0</td></tr><tr><td align="center">2.1.1.RELEASE or 2.0.1.RELEASE or 1.5.1.RELEASE</td><td align="center">1.7.0</td><td align="center">1.1.4</td><td align="center">4.4.0</td><td align="center">2.7.3</td><td align="center">0.9.0</td></tr><tr><td align="center">2.1.0.RELEASE or 2.0.0.RELEASE or 1.5.0.RELEASE</td><td align="center">1.6.3</td><td align="center">1.1.1</td><td align="center">4.4.0</td><td align="center">2.7.3</td><td align="center">0.7.1</td></tr></tbody></table><h2 id="2-2-本项目中使用的版本"><a href="#2-2-本项目中使用的版本" class="headerlink" title="2.2 本项目中使用的版本"></a>2.2 本项目中使用的版本</h2><ul><li>Spring Boot：2.7.14</li><li>Spring Cloud：2021.0.5</li><li>Spring Cloud Alibaba：2021.0.5.0</li></ul><h2 id="2-3-在父工程中添加-Spring-Cloud-Alibab依赖"><a href="#2-3-在父工程中添加-Spring-Cloud-Alibab依赖" class="headerlink" title="2.3 在父工程中添加 Spring Cloud Alibab依赖"></a>2.3 在父工程中添加 Spring Cloud Alibab依赖</h2><p>因为我们之前已经添加过SpringBoot管理器，所以不能再使用这种方式来添加 Spring Cloud Alibaba 的管理器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以采用如下方式，在父工程的 <code>pom.xml</code> 文件中添加如下内容:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以把 SpringBoot 的管理器也放在这里面，再加上 Spring Cloud 的版本管理，最终写法如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- springboot 的版本管理器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.7.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Cloud Alibaba 的版本管理 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.5.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring Cloud 的版本管理 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2021.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、Alibaba-微服务组件-Nacos-注册中心"><a href="#三、Alibaba-微服务组件-Nacos-注册中心" class="headerlink" title="三、Alibaba 微服务组件 Nacos 注册中心"></a>三、Alibaba 微服务组件 Nacos 注册中心</h1><h2 id="3-1-什么是-Nacos"><a href="#3-1-什么是-Nacos" class="headerlink" title="3.1 什么是 Nacos"></a>3.1 什么是 Nacos</h2><p>官方：一个更易于构建云原生应用的动态服务发现（Nacos Discovery）、服务配置（Nacos Config）和服务管理平台。</p><p>集 注册中心+配置中心+服务管理 平台</p><p>Nacos 的关键特性包括：</p><ul><li>服务发现和服务健康监测</li><li>动态配置服务</li><li>动态 DNS 服务</li><li>服务及其元数据管理</li></ul><h2 id="3-2-核心功能"><a href="#3-2-核心功能" class="headerlink" title="3.2 核心功能"></a>3.2 核心功能</h2><ul><li><strong>服务注册</strong>：Nacos Client 会通过发送 REST 请求的方式向 Nacos Server 注册自己的服务，提供自身的元数据，比如 ip 地址、端口等信息。Nacos Server 接收到注册请求后，就会把这些元数据信息存储在一个双层的内存 Map 中。</li><li><strong>服务心跳</strong>：在服务注册后，Nacos Client 会维护一个定时心跳来持续通知 Nacos Server，说明服务一直处于可用状态，防止被剔除。默认 5s 发送一次心跳。</li><li><strong>服务同步</strong>：Nacos Server 集群之间会相互同步服务实例，用来保证服务信息的一致性。 leader raft</li><li><strong>服务发现</strong>：服务消费者（Nacos Client）在调用服务提供者的服务时，会发送一个 REST 请求给 Nacos Server，获取上面注册的服务清单，并且缓存在在 Nacos Client 本地，同时会在 Nacos Client 本地启动一个定时任务定时拉取服务端最新的注册表信息更新到本地缓存。</li><li><strong>服务健康检查</strong>：Nacos Server 会开启一个定时任务用来检查注册服务实例的健康情况，对于超过 15s 没有收到客户端心跳的实例会将它的 healthy 属性置为 false（客户端服务发现时不会发现），如果某个实例超过 30s 没有收到心跳，直接剔除该实例（被剔除的实例如果恢复发送心跳则会重新注册）。</li></ul><h2 id="3-3-Nacos-Server-单机部署"><a href="#3-3-Nacos-Server-单机部署" class="headerlink" title="3.3 Nacos Server 单机部署"></a>3.3 Nacos Server 单机部署</h2><h3 id="3-3-1-下载"><a href="#3-3-1-下载" class="headerlink" title="3.3.1 下载"></a>3.3.1 下载</h3><h4 id="3-3-1-1-下载源码编译"><a href="#3-3-1-1-下载源码编译" class="headerlink" title="3.3.1.1 下载源码编译"></a>3.3.1.1 下载源码编译</h4><p>源码下载地址：<a href="https://github.com/alibaba/nacos">https://github.com/alibaba/nacos</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nacos</span><br><span class="line">mvn -Prelease-nacos clean install -U</span><br><span class="line">cd nacos/distribution/target</span><br></pre></td></tr></table></figure><h4 id="3-3-1-2-下载安装包"><a href="#3-3-1-2-下载安装包" class="headerlink" title="3.3.1.2 下载安装包"></a>3.3.1.2 下载安装包</h4><p>下载地址：<a href="https://github.com/alibaba/nacos/releases">https://github.com/alibaba/nacos/releases</a></p><h3 id="3-3-2-启动-Nacos-Server"><a href="#3-3-2-启动-Nacos-Server" class="headerlink" title="3.3.2 启动 Nacos Server"></a>3.3.2 启动 Nacos Server</h3><p>此处以 Windows 为例，双击 <code>startup.cmd</code> 运行</p><p><img src="/posts/4c20f373/image-20230805145441034.png" alt="image-20230805145441034"></p><p>但是默认是集群模式，此处我们先将其改成单机模式再运行，编辑 <code>startup.cmd</code> ，将下面的 <code>cluster</code> 修改为 <code>standalone</code></p><p><img src="/posts/4c20f373/image-20230805145609226.png" alt="image-20230805145609226"></p><p>双击 <code>startup.cmd</code>，看到如下输出代表启动成功</p><p><img src="/posts/4c20f373/image-20230805145925367.png" alt="image-20230805145925367"></p><p>访问 <a href="http://localhost:8848/nacos/index.html">http://localhost:8848/nacos/index.html</a> 即可登录 web 控制台。默认的用户名和密码都是 nacos</p><p><img src="/posts/4c20f373/image-20230805150121300.png" alt="image-20230805150121300"></p><h2 id="3-4-搭建-Nacos-Client"><a href="#3-4-搭建-Nacos-Client" class="headerlink" title="3.4 搭建 Nacos Client"></a>3.4 搭建 Nacos Client</h2><h3 id="3-4-1-修改之前创建的项目"><a href="#3-4-1-修改之前创建的项目" class="headerlink" title="3.4.1 修改之前创建的项目"></a>3.4.1 修改之前创建的项目</h3><p>为了不影响我们之前创建的两个子模块，我们在这里重新创建这两个模块。</p><p>复制之前创建的 order 和 stock 两个模块，分别复制为 order-nacos 和 stock-nacos，并做一些修改。</p><p>修改两个模块的 pom.xml 文件，将 artifactId 分别修改为 <code>&lt;artifactId&gt;order-nacos&lt;/artifactId&gt;</code> 和 <code>&lt;artifactId&gt;stock-nacos&lt;/artifactId&gt;</code> </p><p>然后在父工程的 pom.xml 文件的 <code>&lt;modules&gt;</code> 下添加两个 module：<code>&lt;module&gt;order-nacos&lt;/module&gt;</code> 和 <code>&lt;module&gt;stock-nacos&lt;/module&gt;</code></p><p>然后点击 Maven，刷新一下即可</p><p><img src="/posts/4c20f373/image-20230805150912158.png" alt="image-20230805150912158"></p><h3 id="3-4-2-引入-nacos-discovery-依赖"><a href="#3-4-2-引入-nacos-discovery-依赖" class="headerlink" title="3.4.2 引入 nacos-discovery 依赖"></a>3.4.2 引入 nacos-discovery 依赖</h3><h4 id="3-4-2-1-添加依赖"><a href="#3-4-2-1-添加依赖" class="headerlink" title="3.4.2.1 添加依赖"></a>3.4.2.1 添加依赖</h4><p>在 <code>order-nacos</code> 和 <code>stock-nacos</code> 的 pom.xml 文件中添加 nacos-discovery 的依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- nacos 服务注册发现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-4-2-2-修改配置文件"><a href="#3-4-2-2-修改配置文件" class="headerlink" title="3.4.2.2 修改配置文件"></a>3.4.2.2 修改配置文件</h4><p>在 application.yml 文件中添加相关配置。</p><p>order-nacos：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8020</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称 （nacos 会将该名称当作服务名称）</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">order-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>stock-nacos：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8021</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># 应用名称 （nacos 会将该名称当作服务名称）</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">stock-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">server-addr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8848</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">nacos</span></span><br><span class="line">        <span class="attr">namespace:</span> <span class="string">public</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-4-2-3-常见配置项"><a href="#3-4-2-3-常见配置项" class="headerlink" title="3.4.2.3 常见配置项"></a>3.4.2.3 常见配置项</h4><table><thead><tr><th align="center">配置项</th><th align="center">Key</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>服务端地址</code></td><td align="center"><code>spring.cloud.nacos.discovery.server-addr</code></td><td align="center"><code>无</code></td><td align="center"><code>Nacos Server 启动监听的ip地址和端口</code></td></tr><tr><td align="center"><code>服务名</code></td><td align="center"><code>spring.cloud.nacos.discovery.service</code></td><td align="center"><code>$&#123;spring.application.name&#125;</code></td><td align="center"><code>给当前的服务命名</code></td></tr><tr><td align="center"><code>服务分组</code></td><td align="center"><code>spring.cloud.nacos.discovery.group</code></td><td align="center"><code>DEFAULT_GROUP</code></td><td align="center"><code>设置服务所处的分组</code></td></tr><tr><td align="center"><code>权重</code></td><td align="center"><code>spring.cloud.nacos.discovery.weight</code></td><td align="center"><code>1</code></td><td align="center"><code>取值范围 1 到 100，数值越大，权重越大</code></td></tr><tr><td align="center"><code>网卡名</code></td><td align="center"><code>spring.cloud.nacos.discovery.network-interface</code></td><td align="center"><code>无</code></td><td align="center"><code>当IP未配置时，注册的IP为此网卡所对应的IP地址，如果此项也未配置，则默认取第一块网卡的地址</code></td></tr><tr><td align="center"><code>注册的IP地址</code></td><td align="center"><code>spring.cloud.nacos.discovery.ip</code></td><td align="center"><code>无</code></td><td align="center"><code>优先级最高</code></td></tr><tr><td align="center"><code>注册的端口</code></td><td align="center"><code>spring.cloud.nacos.discovery.port</code></td><td align="center"><code>-1</code></td><td align="center"><code>默认情况下不用配置，会自动探测</code></td></tr><tr><td align="center"><code>命名空间</code></td><td align="center"><code>spring.cloud.nacos.discovery.namespace</code></td><td align="center"><code>无</code></td><td align="center"><code>常用场景之一是不同环境的注册的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。</code></td></tr><tr><td align="center"><code>AccessKey</code></td><td align="center"><code>spring.cloud.nacos.discovery.access-key</code></td><td align="center"><code>无</code></td><td align="center"><code>当要上阿里云时，阿里云上面的一个云账号名</code></td></tr><tr><td align="center"><code>SecretKey</code></td><td align="center"><code>spring.cloud.nacos.discovery.secret-key</code></td><td align="center"><code>无</code></td><td align="center"><code>当要上阿里云时，阿里云上面的一个云账号密码</code></td></tr><tr><td align="center"><code>Metadata</code></td><td align="center"><code>spring.cloud.nacos.discovery.metadata</code></td><td align="center"><code>无</code></td><td align="center"><code>使用Map格式配置，用户可以根据自己的需要自定义一些和服务相关的元数据信息</code></td></tr><tr><td align="center"><code>日志文件名</code></td><td align="center"><code>spring.cloud.nacos.discovery.log-name</code></td><td align="center"><code>无</code></td><td align="center"></td></tr><tr><td align="center"><code>集群</code></td><td align="center"><code>spring.cloud.nacos.discovery.cluster-name</code></td><td align="center"><code>DEFAULT</code></td><td align="center"><code>配置成Nacos集群名称</code></td></tr><tr><td align="center"><code>接入点</code></td><td align="center"><code>spring.cloud.nacos.discovery.enpoint</code></td><td align="center"><code>UTF-8</code></td><td align="center"><code>地域的某个服务的入口域名，通过此域名可以动态地拿到服务端地址</code></td></tr><tr><td align="center"><code>是否集成Ribbon</code></td><td align="center"><code>ribbon.nacos.enabled</code></td><td align="center"><code>true</code></td><td align="center"><code>一般都设置成true即可</code></td></tr><tr><td align="center"><code>是否开启Nacos Watch</code></td><td align="center"><code>spring.cloud.nacos.discovery.watch.enabled</code></td><td align="center"><code>true</code></td><td align="center"><code>可以设置成false来关闭 watch</code></td></tr><tr><td align="center"><code>注册的IP地址类型</code></td><td align="center"><code>spring.cloud.nacos.discovery.ip-type</code></td><td align="center"><code>IPv4</code></td><td align="center"><code>可以配置IPv4和IPv6两种类型</code></td></tr></tbody></table><h3 id="3-4-3-运行"><a href="#3-4-3-运行" class="headerlink" title="3.4.3 运行"></a>3.4.3 运行</h3><p>运行 order-nacos 和 stock-nacos，然后查看 nacos 的 web 控制台，可以看到这两个服务：</p><p><img src="/posts/4c20f373/image-20230805152158140.png" alt="image-20230805152158140"></p><h3 id="3-4-4-改造-order-nacos-调用-stock-nacos-的方式"><a href="#3-4-4-改造-order-nacos-调用-stock-nacos-的方式" class="headerlink" title="3.4.4 改造 order-nacos 调用 stock-nacos 的方式"></a>3.4.4 改造 order-nacos 调用 stock-nacos 的方式</h3><h4 id="3-4-4-1-给-order-nacos-添加负载均衡"><a href="#3-4-4-1-给-order-nacos-添加负载均衡" class="headerlink" title="3.4.4.1 给 order-nacos 添加负载均衡"></a>3.4.4.1 给 order-nacos 添加负载均衡</h4><p>这一步很重要，因为不添加负载均衡的话是无法调用其他服务的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 高版本的不使用Netflix了，所以不用Ribbon来实现负载均衡，因此需要添加负载均衡的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-loadbalancer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改 order-nacos 启动类中的 RestTemplate，在 RestTemplate 上添加 <code>@LoadBalanced</code> 注解。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@LoadBalanced</span></span><br><span class="line"><span class="keyword">public</span> RestTemplate <span class="title function_">restTemplate</span><span class="params">(RestTemplateBuilder builder)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> builder.build();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-4-2-修改-order-nacos-模块的-OrderController-类中的-add-方法："><a href="#3-4-4-2-修改-order-nacos-模块的-OrderController-类中的-add-方法：" class="headerlink" title="3.4.4.2 修改 order-nacos 模块的 OrderController 类中的 add 方法："></a>3.4.4.2 修改 order-nacos 模块的 <code>OrderController</code> 类中的 <code>add</code> 方法：</h4><p>将 stock-nacos 的服务地址修改为服务名 <code>stock-service</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/add&quot;)</span></span><br><span class="line"><span class="meta">@LoadBalanced</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;下单成功&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> restTemplate.getForObject(<span class="string">&quot;http://stock-service/stock/reduce&quot;</span>, String.class);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Hello World &quot;</span> + msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启 order-nacos 服务，再次请求  <code>http://localhost:8010/order/add</code>，也可以请求成功。</p><h1 id="3-5-Nacos-Server-集群部署"><a href="#3-5-Nacos-Server-集群部署" class="headerlink" title="3.5 Nacos Server 集群部署"></a>3.5 Nacos Server 集群部署</h1><p>下面介绍在 Linux 上安装 Nacos Server 并搭建集群的步骤。</p><h3 id="3-5-1-下载Nacos-Server"><a href="#3-5-1-下载Nacos-Server" class="headerlink" title="3.5.1 下载Nacos Server"></a>3.5.1 下载Nacos Server</h3><p>下载地址：<a href="https://github.com/alibaba/nacos/releases/download/2.2.0/nacos-server-2.2.0.tar.gz">https://github.com/alibaba/nacos/releases/download/2.2.0/nacos-server-2.2.0.tar.gz</a></p><h3 id="3-5-2-安装-Nacos-Server"><a href="#3-5-2-安装-Nacos-Server" class="headerlink" title="3.5.2 安装 Nacos Server"></a>3.5.2 安装 Nacos Server</h3><p>将下载好的安装包上传到 <code>/opt/nacos</code> 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/nacos</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压，解压后得到 nacos 目录</span></span><br><span class="line">tar -zxvf nacos-server-2.2.0.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">因为要在一台机器上装多个，所以将解压出来的目录重命名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">nacos2.x新增两个通信端口，会占用连续的两个端口（与主端口的偏移量分别为+1000和+1001），所以这里不要配置连续的端口，端口之间至少留出一个端口</span></span><br><span class="line">cp -r nacos nacos8849</span><br><span class="line">cp -r nacos nacos8851</span><br><span class="line">mv nacos nacos8853</span><br></pre></td></tr></table></figure><h3 id="3-5-3-修改配置文件"><a href="#3-5-3-修改配置文件" class="headerlink" title="3.5.3 修改配置文件"></a>3.5.3 修改配置文件</h3><p>以 nacos8849 为例，进入 nacos8849 目录。修改 <code>conf/application.properties</code> 文件的配置，使用外置数据源，要使用 mysql5.7+ </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># web 服务端口</span></span><br><span class="line"><span class="attr">server.port</span>=<span class="string">8849</span></span><br><span class="line"><span class="comment"># 使用外置 MySQL 数据源</span></span><br><span class="line"><span class="attr">spring.datasource.platform</span>=<span class="string">mysql</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Count of DB:</span></span><br><span class="line"><span class="attr">db.num</span>=<span class="string">1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">### Connect URL of DB:</span></span><br><span class="line"><span class="attr">db.url.0</span>=<span class="string">jdbc:mysql://127.0.0.1:3306/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=true&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line"><span class="attr">db.user.0</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">db.password.0</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><p>nacos8851 和 nacos8853 中也作相同修改，注意 server.port 要对应修改。</p><h3 id="3-5-4-修改-cluster-conf"><a href="#3-5-4-修改-cluster-conf" class="headerlink" title="3.5.4 修改 cluster.conf"></a>3.5.4 修改 cluster.conf</h3><p>将 <code>conf/cluster.conf.example</code> 复制为 <code>conf/cluster.conf</code> ，添加节点配置</p><p><img src="/posts/4c20f373/image-20230808110015500.png" alt="image-20230808110015500"></p><p>nacos8849、nacos8851 和 nacos8853 的此文件都是相同的。</p><h3 id="3-5-5-创建-MySQL-数据库"><a href="#3-5-5-创建-MySQL-数据库" class="headerlink" title="3.5.5 创建 MySQL 数据库"></a>3.5.5 创建 MySQL 数据库</h3><h4 id="3-5-5-1-安装-MySQL"><a href="#3-5-5-1-安装-MySQL" class="headerlink" title="3.5.5.1 安装 MySQL"></a>3.5.5.1 安装 MySQL</h4><p>如果还未安装 MySQL，可以参考以下在 docker 中安装 MySQL的步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拉取 MySQL 镜像，不加版本号默认下载 latest 版本，即 docker pull mysql:latest</span></span><br><span class="line">docker pull mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql 的配置目录</span></span><br><span class="line">mkdir -p /opt/docker/mysql/conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql 的日志目录</span></span><br><span class="line">mkdir -p /opt/docker/mysql/logs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql 的数据目录</span></span><br><span class="line">mkdir -p /opt/docker/mysql/data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 mysql:latest 镜像创建容器</span></span><br><span class="line">docker run -p 3306:3306 --name mysql --privileged=true -v /opt/docker/mysql/conf:/etc/mysql/conf.d -v /opt/docker/mysql/logs:/logs -v /opt/docker/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:latest</span><br></pre></td></tr></table></figure><p>命令说明：</p><ul><li><code>-p 3306:3306</code><br>将宿主机的 3306 端口映射到 docker 容器的 3306 端口，格式为：主机(宿主)端口:容器端口</li><li><code>--name mysql</code><br>运行服务的名字</li><li><code>-v /opt/docker/mysql/conf:/etc/mysql/conf.d</code><br>将宿主机 <code>/opt/docker/mysql</code> 目录下的 <code>/conf</code> 挂载到容器的 <code>/etc/mysql/conf.d</code></li><li><code>-v /opt/docker/mysql/logs:/logs</code><br>将宿主机 <code>/opt/docker/mysql</code> 目录下的 <code>/logs</code> 目录挂载到容器的 <code>/logs</code></li><li><code>-v /opt/docker/mysql/data:/var/lib/mysql</code><br>将宿主机 <code>/opt/docker/mysql</code> 目录下的 <code>/data</code> 目录挂载到容器的 <code>/var/lib/mysql</code></li><li><code>-e MYSQL_ROOT_PASSWORD=123456</code><br>初始化 <code>root</code> 用户的密码为 <code>123456</code></li><li><code>-d mysql:latest</code><br>后台程序运行 <code>mysql</code></li></ul><h4 id="3-5-5-2-创建数据库表"><a href="#3-5-5-2-创建数据库表" class="headerlink" title="3.5.5.2 创建数据库表"></a>3.5.5.2 创建数据库表</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入 MySQL 容器</span></span><br><span class="line">docker exec -it &lt;%CONTAINER ID%&gt; /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行以下命令，然后输入密码</span></span><br><span class="line">mysql -uroot -p</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建数据库</span></span><br><span class="line">create database nacos_config default CHARACTER set utf8mb4 collate utf8mb4_0900_ai_ci;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换数据库</span></span><br><span class="line">use nacos_config;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.sql 文件在 nacos 安装目录下的 conf/mysql-schema.sql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行 .sql 文件，我的文件放在宿主机的 /opt/docker/mysql/data/目录下面，对应 docker 中的 /var/lib/mysql/ 目录</span></span><br><span class="line">SOURCE /var/lib/mysql/mysql-schema.sql;</span><br></pre></td></tr></table></figure><p><img src="/posts/4c20f373/image-20230808095356529.png" alt="image-20230808095356529"></p><h3 id="3-5-6-如果出现内存不足，修改启动脚本JVM参数"><a href="#3-5-6-如果出现内存不足，修改启动脚本JVM参数" class="headerlink" title="3.5.6 如果出现内存不足，修改启动脚本JVM参数"></a>3.5.6 如果出现内存不足，修改启动脚本JVM参数</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms512m -Xmx512m -Xmn256m -XX:MetaspaceSize=64m -XX:MaxMetaspaceSize=128m&quot;</span><br></pre></td></tr></table></figure><h3 id="3-5-7-启动-nacos"><a href="#3-5-7-启动-nacos" class="headerlink" title="3.5.7 启动 nacos"></a>3.5.7 启动 nacos</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入启动程序所在目录</span></span><br><span class="line">cd nacos8849/bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行启动命令</span></span><br><span class="line">./startup.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看启动日志</span></span><br><span class="line">tailf ../logs/start.out</span><br></pre></td></tr></table></figure><p><img src="/posts/4c20f373/image-20230808103556160.png" alt="image-20230808103556160"></p><p>在 nacos8851 和 nacos8853 中也执行相同的操作.</p><p>启动完毕后，登录任一节点的 web 控制台，可以看到集群中的所有节点。</p><p><img src="/posts/4c20f373/image-20230808105927751.png" alt="image-20230808105927751"></p><h3 id="3-5-8-使用-nginx-访问-nacos-集群"><a href="#3-5-8-使用-nginx-访问-nacos-集群" class="headerlink" title="3.5.8 使用 nginx 访问 nacos 集群"></a>3.5.8 使用 nginx 访问 nacos 集群</h3><p>现在集群已经搭建完成，但是我们去访问节点的时候还是通过各个节点的 ip 去访问的，这显然不合适，所以我们需要使用一个 ip 就能访问到各个节点，这里我们通过 nginx 来实现。</p><h4 id="3-5-8-1-安装-nginx"><a href="#3-5-8-1-安装-nginx" class="headerlink" title="3.5.8.1 安装 nginx"></a>3.5.8.1 安装 nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">------ 安装 nginx 依赖</span></span><br><span class="line">yum install -y gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel </span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">------ 下载并解压 nginx 安装包</span></span><br><span class="line">cd /usr/local</span><br><span class="line">mkdir nginx</span><br><span class="line">cd nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 nginx</span></span><br><span class="line">wget http://nginx.org/download/nginx-1.20.1.tar.gz</span><br><span class="line">tar -zxvf nginx-1.20.1.tar.gz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 nginx 其他模块</span></span><br><span class="line">yum -y install epel-release</span><br><span class="line">yum -y install nginx-all-modules.noarch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">------ 安装 nginx</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入nginx目录</span></span><br><span class="line">cd /usr/local/nginx/nginx-1.20.1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译 执行命令 考虑到后续安装ssl证书 添加两个模块  如不需要直接执行./configure即可</span></span><br><span class="line">./configure --with-http_stub_status_module --with-http_ssl_module --with-stream=dynamic</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行make命令(要是执行不成功请检查最开始安装的四个依赖有没有安装成功)</span></span><br><span class="line">make</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行make install命令</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="3-5-8-2-编辑-nginx-配置文件"><a href="#3-5-8-2-编辑-nginx-配置文件" class="headerlink" title="3.5.8.2 编辑 nginx 配置文件"></a>3.5.8.2 编辑 nginx 配置文件</h4><p><code>vim /usr/local/nginx/conf/nginx.conf</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">upstream nacos &#123;</span><br><span class="line">    server 192.168.204.130:8849;</span><br><span class="line">    server 192.168.204.130:8851;</span><br><span class="line">    server 192.168.204.130:8853;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8847;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    location /nacos &#123;</span><br><span class="line">    proxy_pass http://nacos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/posts/4c20f373/image-20230808112755099.png" alt="image-20230808112755099"></p><h4 id="3-5-8-3-启动-nginx"><a href="#3-5-8-3-启动-nginx" class="headerlink" title="3.5.8.3 启动 nginx"></a>3.5.8.3 启动 nginx</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定配置文件启动</span></span><br><span class="line">./nginx -c  /usr/local/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>访问 <code>ip:8847/nacos</code> ，也能正常看到集群中的各个节点。</p><p><img src="/posts/4c20f373/image-20230808113532525.png" alt="image-20230808113532525"></p><p><img src="/posts/4c20f373/image-20230808115006097.png" alt="image-20230808115006097"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 框架 </category>
          
          <category> Spring Cloud </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>PostgreSQL定位问题时常用SQL</title>
      <link href="/posts/f1ecacbb.html"/>
      <url>/posts/f1ecacbb.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、查看当前正在运行的-SQL"><a href="#一、查看当前正在运行的-SQL" class="headerlink" title="一、查看当前正在运行的 SQL"></a>一、查看当前正在运行的 SQL</h1><h2 id="1-1-SQL-语句"><a href="#1-1-SQL-语句" class="headerlink" title="1.1 SQL 语句"></a>1.1 SQL 语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">procpid, </span><br><span class="line"><span class="keyword">start</span>, </span><br><span class="line">now() <span class="operator">-</span> <span class="keyword">start</span> <span class="keyword">AS</span> lap, </span><br><span class="line">current_query </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">(<span class="keyword">SELECT</span> </span><br><span class="line">backendid, </span><br><span class="line">pg_stat_get_backend_pid(S.backendid) <span class="keyword">AS</span> procpid, </span><br><span class="line">pg_stat_get_backend_activity_start(S.backendid) <span class="keyword">AS</span> <span class="keyword">start</span>, </span><br><span class="line">pg_stat_get_backend_activity(S.backendid) <span class="keyword">AS</span> current_query </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">(<span class="keyword">SELECT</span> pg_stat_get_backend_idset() <span class="keyword">AS</span> backendid) <span class="keyword">AS</span> S </span><br><span class="line">) <span class="keyword">AS</span> S </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">current_query <span class="operator">&lt;&gt;</span> <span class="string">&#x27;idle&#x27;</span> </span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> </span><br><span class="line">lap <span class="keyword">DESC</span>; </span><br></pre></td></tr></table></figure><h2 id="1-2-字段说明"><a href="#1-2-字段说明" class="headerlink" title="1.2 字段说明"></a>1.2 字段说明</h2><table><thead><tr><th align="center">字段名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">procpid</td><td align="center">进程 id</td></tr><tr><td align="center">start</td><td align="center">进程开始时间</td></tr><tr><td align="center">lap</td><td align="center">经过时间</td></tr><tr><td align="center">current_query</td><td align="center">执行中的 SQL</td></tr></tbody></table><h2 id="1-3-停止正在执行的-SQL"><a href="#1-3-停止正在执行的-SQL" class="headerlink" title="1.3 停止正在执行的 SQL"></a>1.3 停止正在执行的 SQL</h2><h3 id="1-3-1-方法一"><a href="#1-3-1-方法一" class="headerlink" title="1.3.1 方法一"></a>1.3.1 方法一</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> pg_cancel_backend(进程id);</span><br></pre></td></tr></table></figure><h3 id="1-3-2-方法二"><a href="#1-3-2-方法二" class="headerlink" title="1.3.2 方法二"></a>1.3.2 方法二</h3><p>使用系统命令 <code>kill -9 进程id</code></p><h1 id="二、查看当前事务锁等待、持锁信息的-SQL"><a href="#二、查看当前事务锁等待、持锁信息的-SQL" class="headerlink" title="二、查看当前事务锁等待、持锁信息的 SQL"></a>二、查看当前事务锁等待、持锁信息的 SQL</h1><h2 id="2-1-SQL-语句"><a href="#2-1-SQL-语句" class="headerlink" title="2.1 SQL 语句"></a>2.1 SQL 语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span>    </span><br><span class="line">t_wait <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,    </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid<span class="operator">=</span>b.pid <span class="keyword">and</span> <span class="keyword">not</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_run <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> a.mode,a.locktype,a.database,a.relation,a.page,a.tuple,a.classid,a.granted,   </span><br><span class="line">  a.objid,a.objsubid,a.pid,a.virtualtransaction,a.virtualxid,a.transactionid,a.fastpath,   </span><br><span class="line">  b.state,b.query,b.xact_start,b.query_start,b.usename,b.datname,b.client_addr,b.client_port,b.application_name   </span><br><span class="line">    <span class="keyword">from</span> pg_locks a,pg_stat_activity b <span class="keyword">where</span> a.pid<span class="operator">=</span>b.pid <span class="keyword">and</span> a.granted   </span><br><span class="line">),   </span><br><span class="line">t_overlap <span class="keyword">as</span>   </span><br><span class="line">(   </span><br><span class="line">  <span class="keyword">select</span> r.<span class="operator">*</span> <span class="keyword">from</span> t_wait w <span class="keyword">join</span> t_run r <span class="keyword">on</span>   </span><br><span class="line">  (   </span><br><span class="line">    r.locktype <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.locktype <span class="keyword">and</span>   </span><br><span class="line">    r.database <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.database <span class="keyword">and</span>   </span><br><span class="line">    r.relation <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.relation <span class="keyword">and</span>   </span><br><span class="line">    r.page <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.page <span class="keyword">and</span>   </span><br><span class="line">    r.tuple <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.tuple <span class="keyword">and</span>   </span><br><span class="line">    r.virtualxid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.virtualxid <span class="keyword">and</span>   </span><br><span class="line">    r.transactionid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.transactionid <span class="keyword">and</span>   </span><br><span class="line">    r.classid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.classid <span class="keyword">and</span>   </span><br><span class="line">    r.objid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objid <span class="keyword">and</span>   </span><br><span class="line">    r.objsubid <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">distinct</span> <span class="keyword">from</span> w.objsubid <span class="keyword">and</span>   </span><br><span class="line">    r.pid <span class="operator">&lt;&gt;</span> w.pid   </span><br><span class="line">  )    </span><br><span class="line">),    </span><br><span class="line">t_unionall <span class="keyword">as</span>    </span><br><span class="line">(    </span><br><span class="line">  <span class="keyword">select</span> r.<span class="operator">*</span> <span class="keyword">from</span> t_overlap r    </span><br><span class="line">  <span class="keyword">union</span> <span class="keyword">all</span>    </span><br><span class="line">  <span class="keyword">select</span> w.<span class="operator">*</span> <span class="keyword">from</span> t_wait w    </span><br><span class="line">)    </span><br><span class="line"><span class="keyword">select</span> locktype,datname,relation::regclass,page,tuple,virtualxid,transactionid::text,classid::regclass,objid,objsubid,   </span><br><span class="line">string_agg(   </span><br><span class="line"><span class="string">&#x27;Pid: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> pid <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> pid::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>   </span><br><span class="line"><span class="string">&#x27;Lock_Granted: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> granted::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Mode: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> mode <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> mode::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , FastPath: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> fastpath <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> fastpath::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , VirtualTransaction: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> virtualtransaction <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> virtualtransaction::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Session_State: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> state <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> state::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>   </span><br><span class="line"><span class="string">&#x27;Username: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> usename <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> usename::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Database: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> datname <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> datname::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Client_Addr: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> client_addr <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> client_addr::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Client_Port: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> client_port <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> client_port::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Application_Name: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> application_name <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> application_name::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>    </span><br><span class="line"><span class="string">&#x27;Xact_Start: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> xact_start <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> xact_start::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Query_Start: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> query_start <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> query_start::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Xact_Elapse: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> (now()<span class="operator">-</span>xact_start) <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> (now()<span class="operator">-</span>xact_start)::text <span class="keyword">end</span><span class="operator">||</span><span class="string">&#x27; , Query_Elapse: &#x27;</span><span class="operator">||</span><span class="keyword">case</span> <span class="keyword">when</span> (now()<span class="operator">-</span>query_start) <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> (now()<span class="operator">-</span>query_start)::text <span class="keyword">end</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>    </span><br><span class="line"><span class="string">&#x27;SQL (Current SQL in Transaction): &#x27;</span><span class="operator">||</span>chr(<span class="number">10</span>)<span class="operator">||</span>  </span><br><span class="line"><span class="keyword">case</span> <span class="keyword">when</span> query <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">then</span> <span class="string">&#x27;NULL&#x27;</span> <span class="keyword">else</span> query::text <span class="keyword">end</span>,    </span><br><span class="line">chr(<span class="number">10</span>)<span class="operator">||</span><span class="string">&#x27;--------&#x27;</span><span class="operator">||</span>chr(<span class="number">10</span>)    </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>    </span><br><span class="line">  (  <span class="keyword">case</span> mode    </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;INVALID&#x27;</span> <span class="keyword">then</span> <span class="number">0</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;AccessShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">1</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;RowShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">2</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;RowExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">3</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareUpdateExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">4</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareLock&#x27;</span> <span class="keyword">then</span> <span class="number">5</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ShareRowExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">6</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;ExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">7</span>   </span><br><span class="line">    <span class="keyword">when</span> <span class="string">&#x27;AccessExclusiveLock&#x27;</span> <span class="keyword">then</span> <span class="number">8</span>   </span><br><span class="line">    <span class="keyword">else</span> <span class="number">0</span>   </span><br><span class="line">  <span class="keyword">end</span>  ) <span class="keyword">desc</span>,   </span><br><span class="line">  (<span class="keyword">case</span> <span class="keyword">when</span> granted <span class="keyword">then</span> <span class="number">0</span> <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">end</span>)  </span><br><span class="line">) <span class="keyword">as</span> lock_conflict  </span><br><span class="line"><span class="keyword">from</span> t_unionall   </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>   </span><br><span class="line">locktype,datname,relation,page,tuple,virtualxid,transactionid::text,classid,objid,objsubid ;  </span><br></pre></td></tr></table></figure><h2 id="2-2-字段说明"><a href="#2-2-字段说明" class="headerlink" title="2.2 字段说明"></a>2.2 字段说明</h2><table><thead><tr><th align="center">字段名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">locktype</td><td align="center">被锁定的对象类型：relation、extend、page、tuple、transactionid、virtualxid、object、userlock、advisory</td></tr><tr><td align="center">datname</td><td align="center">数据库名</td></tr><tr><td align="center">relation</td><td align="center">如果对象不是表或只是表的一部分，则此值为“NULL”，否则此值是表的OID</td></tr><tr><td align="center">page</td><td align="center">表中的页号，如果对象不是表行（tuple）或表页（relation page），则此值为“NULL”</td></tr><tr><td align="center">tuple</td><td align="center">页内的行号（tuple）</td></tr><tr><td align="center">virtualxid</td><td align="center">虚拟事务id</td></tr><tr><td align="center">transactionid</td><td align="center">事务id</td></tr><tr><td align="center">classid</td><td align="center">包含该对象系统目录的id</td></tr><tr><td align="center">objid</td><td align="center">对象在系统目录的oid</td></tr><tr><td align="center">objsubid</td><td align="center">如果对象是表列（table column），此列的值为列号，这时classid和objid指向表</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> PostgreSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PostgreSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用docker-compose安装常用中间件</title>
      <link href="/posts/a524c0bb.html"/>
      <url>/posts/a524c0bb.html</url>
      
        <content type="html"><![CDATA[<p>本文主要介绍使用 <code>docker-compose</code> 安装 <code>Redis</code>、<code>Elasticsearch</code>、<code>RabbitMQ</code>、<code>PostgreSQL</code> 这几个组件。</p><h1 id="一、环境准备"><a href="#一、环境准备" class="headerlink" title="一、环境准备"></a>一、环境准备</h1><p>首先需要安装 docker 并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>然后需要安装 docker-compose</p><p>可以去 github 上下载 docker-compose，将下载的二进制文件放在 <code>/usr/local/bin</code> 目录，然后修改文件权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>然后输入 <code>docker-compose -v</code> 验证</p><h1 id="二、拉取镜像"><a href="#二、拉取镜像" class="headerlink" title="二、拉取镜像"></a>二、拉取镜像</h1><p>此处使用的几个组件版本分别为：</p><ul><li>ElasticSearch：2.4.6</li><li>Redis：7.0.4</li><li>RabbitMQ：latest</li><li>PostgreSQL：9.6.21</li></ul><p>ElasticSearch 、Redis、PostgreSQL 指定了版本号，RabbitMQ 未指定，使用了最新版本。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch:2.4.6</span><br><span class="line">docker pull redis:7.0.4</span><br><span class="line">docker pull rabbitmq</span><br><span class="line">docker pull postgres:9.6.21</span><br></pre></td></tr></table></figure><h1 id="三、编辑-docker-compose-yml"><a href="#三、编辑-docker-compose-yml" class="headerlink" title="三、编辑 docker-compose.yml"></a>三、编辑 docker-compose.yml</h1><p>创建一个 <code>docker-compose.yml</code> 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.9&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch:2.4.6</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es-2.4.6-ssl</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#总是重启后启动</span></span><br><span class="line">    <span class="comment">#restart: always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;cluster.name=es-dh&quot;</span> <span class="comment">#设置集群名称为es-dh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;discovery.type=single-node&quot;</span> <span class="comment">#以单一节点模式启动</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms128m -Xmx1024m&quot;</span> <span class="comment">#设置使用jvm内存大小</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/plugins:/usr/share/elasticsearch/plugins</span> <span class="comment">#插件文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/data:/usr/share/elasticsearch/data:rw</span> <span class="comment">#数据文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/logs:/user/share/elasticsearch/logs:rw</span> <span class="comment">#日志文件挂载</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/es/es-2.4.6-ssl/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml</span> <span class="comment">#配置文件挂载</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9300</span><span class="string">:9300</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">es-head:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elasticsearch-head:5</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">es-head-5</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9100</span><span class="string">:9100</span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">rabbitmq</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">rabbitmq:latest</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5672</span><span class="string">:5672</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">15672</span><span class="string">:15672</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/rabbitmq/:/var/lib/rabbitmq</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/rabbitmq/rabbitmq.ssl.config:/etc/rabbitmq/rabbitmq.config</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_VHOST=/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_USER=dh</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">RABBITMQ_DEFAULT_PASS=dh</span></span><br><span class="line">          </span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:7.0.4</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis-7.0.4-ssl</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl/data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl:/var/lib/redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/redis/redis-7.0.4-ssl/redis.conf:/etc/redis/redis.conf</span></span><br><span class="line">      <span class="comment">#- /dh/volumes/redis/redis-7.0.4-ssl/logs/redis.log:/var/log/redis/redis.log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/server.crt:/var/lib/redis/server.crt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/server.key:/var/lib/redis/server.key</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/lib/redis/ca.crt:/var/lib/redis/ca.crt</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;redis-server&quot;</span>,<span class="string">&quot;/etc/redis/redis.conf&quot;</span>]</span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">6379</span><span class="string">:6379</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:9.6.21</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">postgresql-9.6.21-ssl</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">5433</span><span class="string">:5432</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">postgres</span></span><br><span class="line">      <span class="attr">PGDATA:</span> <span class="string">/var/lib/pgsql/9.6/data/</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/pgsql-9.6.21-ssl/data:/var/lib/pgsql/9.6/data/</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/server.crt:/var/lib/pgsql/server.crt</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/server.key:/var/lib/pgsql/server.key</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/dh/volumes/pgsql/ca.crt:/var/lib/pgsql/ca.crt</span></span><br></pre></td></tr></table></figure><p>从上面可以看到我们挂载了一些文件和目录，对于挂载的文件，需要修改其权限为 777。</p><blockquote><p>需要注意：对于 PostgreSQL需要特殊处理，我们将宿主机的 &#x2F;dh&#x2F;volumes&#x2F;pgsql&#x2F;pgsql-9.6.21-ssl&#x2F;data 目录挂载到容器的 &#x2F;var&#x2F;lib&#x2F;pgsql&#x2F;9.6&#x2F;data&#x2F; 目录，宿主机的这个目录必须是一个空目录，否则 PostgreSQL 会启动失败，如果我们想修改配置文件，可以等容器启动后再修改配置文件，然后重启 PostgreSQL。</p><p>由于我们给 PostgreSQL 开启了SSL并挂在了 证书文件，但是 PostgreSQL 的证书文件权限必须为 600 （database user）或 640（root），所以此处我们如果给这三个文件777的权限同样会启动失败，此时我们可以看看挂载的目录里的文件所属用户和所属组，使用chown将这三个证书文件的所属组和用户修改成一样的，并修改权限为600。</p></blockquote><h1 id="四、启动"><a href="#四、启动" class="headerlink" title="四、启动"></a>四、启动</h1><p>执行 <code>docker-compose up -d</code> 启动该文件中定义的所有容器。</p><p>如果想删除所有容器，可以执行 <code>docker-compose down</code></p><p>删除所有已停止的容器，<code>docker-compose rm --stop</code></p><p>删除某个已停止的容器，<code>docker-compose rm --stop $&#123;server_name&#125;</code></p><p>删除某个正在运行的容器， <code>docker-compose rm -f $&#123;service_name&#125;</code></p><p>如果想单独创建某个容器，执行 <code>docker-compose up -d $&#123;server_name&#125;</code></p><p>如果想单独启动或停止某个容器 ，执行 <code>docker-compose start/stop $&#123;server_name&#125;</code></p><h1 id="五、常见问题"><a href="#五、常见问题" class="headerlink" title="五、常见问题"></a>五、常见问题</h1><h2 id="5-1-开启-rabbitmq-web管理端"><a href="#5-1-开启-rabbitmq-web管理端" class="headerlink" title="5.1 开启 rabbitmq web管理端"></a>5.1 开启 rabbitmq web管理端</h2><p>进入容器，执行 <code>rabbitmq-plugins enable rabbitmq_management</code></p><p>此时访问管理页面，点击 Channels 可能会报错，解决办法：</p><p>①查看配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf</span><br></pre></td></tr></table></figure><p>注意：文件名可能不是management_agent.disable_metrics_collector.conf，可能是xx-management_agent.disable_metrics_collector.conf，具体的可以看这个目录下面的实际文件名。</p><p><img src="/posts/a524c0bb/image-20230612160800809.png" alt="image-20230612160800809"></p><p>②将配置文件中的 <code>true</code> 修改成 <code>false</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo management_agent.disable_metrics_collector = false &gt; /etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf</span><br></pre></td></tr></table></figure><p>然后退出容器，重启 rabbitmq</p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 IDEA 构建 Spring5.3.10 源码</title>
      <link href="/posts/983a1c52.html"/>
      <url>/posts/983a1c52.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>此教程是基于周瑜老师的 <strong>Spring5.3.10 注释版源码</strong>编译的，并不是 Github 原生的 Spring5.3.10 源码，有一些差别，但都是 gradle 配置文件的微小改动，比如把某些依赖从 optional 改成 compile 级别、修改了 gradle 仓库的地址（主要是为了方便编译），其他都没改动。</p></blockquote><h1 id="一、版本"><a href="#一、版本" class="headerlink" title="一、版本"></a>一、版本</h1><ul><li>Spring 版本：5.3.10</li><li>Gradle 版本：6.8</li><li>IDEA 版本：2022.2</li></ul><p><img src="/posts/983a1c52/1685515451815-c83a27f4-385a-42d9-8156-a24808c36be0.png" alt="IDEA 版本"></p><h1 id="二、下载Spring源码所需要的依赖"><a href="#二、下载Spring源码所需要的依赖" class="headerlink" title="二、下载Spring源码所需要的依赖"></a>二、下载Spring源码所需要的依赖</h1><p>因为Spring源码存在很多依赖包，如果自行下载，会需要下很久，所以此处将我自己电脑上已下载的依赖给出：</p><blockquote><p>链接：<a href="https://caiyun.139.com/m/i?005CiN4dFp6mN">https://caiyun.139.com/m/i?005CiN4dFp6mN</a></p><p>提取码：TbOy</p></blockquote><h1 id="三、下载-Spring-源码"><a href="#三、下载-Spring-源码" class="headerlink" title="三、下载 Spring 源码"></a>三、下载 Spring 源码</h1><p>git clone 的地址为：<a href="https://gitee.com/dhpro/spring-framework-5.3.10.git">https://gitee.com/dhpro/spring-framework-5.3.10.git</a></p><p>建议直接用 IDEA 的 git 来下载源码：</p><p><img src="/posts/983a1c52/1685515617531-5c3d6c65-6af1-42be-8572-11f4717c6fa4.png" alt="New Project"></p><p><img src="/posts/983a1c52/1685515622726-73454c6c-2a1f-448b-8e14-6080485a8a56.png" alt="Clone"></p><p>输入地址，点击 Clone，就会开始下载源码工程（因为是从 gitee 上下载，所以会比从 github 上下载快很多)。 一旦下载完成，IDEA 就会自动下载 gradle，下载完 gradle 就会开始下载 Spring 源码依赖，但是我们已经有现成的了，所以可以直接取消这个过程。</p><h1 id="四、修改IDEA的gradle配置"><a href="#四、修改IDEA的gradle配置" class="headerlink" title="四、修改IDEA的gradle配置"></a>四、修改IDEA的gradle配置</h1><p><img src="/posts/983a1c52/1685515713115-b417e4cf-fa0e-4376-b06b-b524e144cbe9.png" alt="Gradle 配置"></p><p>首先把 gradle user home 改为 <strong>.gradle压缩包</strong> 的解压之后的文件路径，</p><p>然后把 Build and run using 和 Run tests using 都改为 IntelliJ IDEA，</p><p>改完之后点击 Apply，再点击 OK，会自动触发 gradle 的重新编译。</p><h1 id="五、运行代码"><a href="#五、运行代码" class="headerlink" title="五、运行代码"></a>五、运行代码</h1><p>编译成功后，在左侧可以看到如下模块，其中有一个 tuling 模块，这是一个可以直接运行的模块，在它下面有一个 Test 类，直接运行 main 方法。</p><p><img src="/posts/983a1c52/1685515818638-aa54c79e-7e57-4441-9757-ea00a0bf6274.png" alt="Test"></p><h2 id="5-1-运行过程中可能出现的问题"><a href="#5-1-运行过程中可能出现的问题" class="headerlink" title="5.1 运行过程中可能出现的问题"></a>5.1 运行过程中可能出现的问题</h2><h3 id="5-1-1-问题一"><a href="#5-1-1-问题一" class="headerlink" title="5.1.1 问题一"></a>5.1.1 问题一</h3><p>我在运行的时候出现了以下错误：</p><p><img src="/posts/983a1c52/1685515894900-3d9a036b-beaf-4505-a394-039d87d10d82.png" alt="报错 1"></p><p>由于报错的是 core 模块，所以在 gradle 中找到 core 模块，先执行 clean，然后 build，执行完毕后重新运行程序，问题解决。</p><p><img src="/posts/983a1c52/1685515903538-7acd0039-35d6-48d3-8535-bd3659e3bbc8.png" alt="Clean"></p><p><img src="/posts/983a1c52/1685515909414-1dbb5934-710e-4d30-bc59-a1e4b47d51ce.png" alt="运行成功截图"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 框架 </category>
          
          <category> Spring </category>
          
          <category> Spring-5.3.10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Arthas</title>
      <link href="/posts/e1a71cf6.html"/>
      <url>/posts/e1a71cf6.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><h2 id="1-1-什么是-Arthas"><a href="#1-1-什么是-Arthas" class="headerlink" title="1.1 什么是 Arthas"></a>1.1 什么是 Arthas</h2><p>Arthas 是一款线上监控诊断产品，通过全局视角实时查看应用 load、内存、gc、线程的状态信息，并能在不修改应用代码的情况下，对业务问题进行诊断，包括查看方法调用的出入参、异常，监测方法执行耗时，类加载信息等，大大提升线上问题排查效率。</p><h2 id="1-2-下载-Arthas"><a href="#1-2-下载-Arthas" class="headerlink" title="1.2 下载 Arthas"></a>1.2 下载 Arthas</h2><p>下载地址：<a href="https://arthas.aliyun.com/download/latest_version?mirror=aliyun">https://arthas.aliyun.com/download/latest_version?mirror=aliyun</a></p><h2 id="1-3-启动方式"><a href="#1-3-启动方式" class="headerlink" title="1.3 启动方式"></a>1.3 启动方式</h2><p>将下载的文件解压后，可以看到有 <code>as.sh</code>和 <code>arthas-boot.jar</code>，有两种启动方式</p><ul><li>直接执行 <code>./as.sh</code>启动</li><li>执行 <code>java -jar arthas-boot.jar</code>启动</li></ul><blockquote><p>需要注意的是：使用和目标进程一致的用户启动，否则可能 attach 失败</p><ul><li>执行该程序的用户需要和目标进程具有相同的权限。比如以 <code>admin</code>用户来执行：<code>sudo su admin &amp;&amp; java -jar arthas-boot.jar</code>或 <code>sudo -u admin -EH java -jar arthas-boot.jar</code>。</li><li>如果 attach 不上目标进程，可以查看<code>~/logs/arthas/</code>目录下的日志。</li></ul></blockquote><p>执行成功后会显示 Java 进程信息，输入对应的数字序号后回车，Arthas 会 attach 到目标进程上，并输出日志。</p><h5 id><a href="#" class="headerlink" title></a><img src="/posts/e1a71cf6/1685446464667-5b9471f9-ff69-4e3e-a665-9235f11676cb.png" alt="启动截图"></h5><h1 id="二、命令列表及其使用"><a href="#二、命令列表及其使用" class="headerlink" title="二、命令列表及其使用"></a>二、命令列表及其使用</h1><h2 id="2-1-JVM-相关"><a href="#2-1-JVM-相关" class="headerlink" title="2.1 JVM 相关"></a>2.1 JVM 相关</h2><h3 id="2-1-1-dashboard-当前系统的实时数据面板"><a href="#2-1-1-dashboard-当前系统的实时数据面板" class="headerlink" title="2.1.1 dashboard - 当前系统的实时数据面板"></a>2.1.1 dashboard - 当前系统的实时数据面板</h3><h4 id="2-1-1-1-作用"><a href="#2-1-1-1-作用" class="headerlink" title="2.1.1.1 作用"></a>2.1.1.1 作用</h4><p>显示当前系统的实时数据面板，按 <code>ctrl+c</code>退出。</p><h4 id="2-1-1-2-参数说明"><a href="#2-1-1-2-参数说明" class="headerlink" title="2.1.1.2 参数说明"></a>2.1.1.2 参数说明</h4><table><thead><tr><th align="center"><strong>参数名称</strong></th><th align="center"><strong>参数说明</strong></th></tr></thead><tbody><tr><td align="center">[i:]</td><td align="center">刷新实时数据的时间间隔 (ms)，默认 5000ms</td></tr><tr><td align="center">[n:]</td><td align="center">刷新实时数据的次数</td></tr></tbody></table><p>实例：<code>dashboard -i 1000 -n 2</code> ：每1000ms刷新一次，刷新两次。</p><h4 id="2-1-1-3-数据说明"><a href="#2-1-1-3-数据说明" class="headerlink" title="2.1.1.3 数据说明"></a>2.1.1.3 数据说明</h4><p><img src="/posts/e1a71cf6/1685498254758-2eb0afda-67ca-4d45-9a87-c3c08b555c70.png" alt="dashboard运行截图"></p><ul><li>ID: Java 级别的线程 ID，注意这个 ID 不能跟 jstack 中的 nativeID 一一对应。</li><li>NAME: 线程名</li><li>GROUP: 线程组名</li><li>PRIORITY: 线程优先级, 1~10 之间的数字，越大表示优先级越高</li><li>STATE: 线程的状态</li><li>CPU%: 线程的 cpu 使用率。比如采样间隔 1000ms，某个线程的增量 cpu 时间为 100ms，则 cpu 使用率&#x3D;100&#x2F;1000&#x3D;10%</li><li>DELTA_TIME: 上次采样之后线程运行增量 CPU 时间，数据格式为秒</li><li>TIME: 线程运行总 CPU 时间，数据格式为分:秒</li><li>INTERRUPTED: 线程当前的中断位状态</li><li>DAEMON: 是否是 daemon 线程</li></ul><p>从上图中可以看到有些线程的 ID、PRIORITY 为-1，且没有状态等属性，这是因为这些线程是 JVM 内部线程。</p><h4 id="2-1-1-4-JVM-内部线程"><a href="#2-1-1-4-JVM-内部线程" class="headerlink" title="2.1.1.4 JVM 内部线程"></a>2.1.1.4 JVM 内部线程</h4><p>Java 8 之后支持获取 JVM 内部线程 CPU 时间，这些线程只有名称和 CPU 时间，没有 ID 及状态等信息（显示 ID 为-1）。 通过内部线程可以观测到 JVM 活动，如 GC、JIT 编译等占用 CPU 情况，方便了解 JVM 整体运行状况。</p><ul><li>当 JVM 堆(heap)&#x2F;元数据(metaspace)空间不足或 OOM 时，可以看到 GC 线程的 CPU 占用率明显高于其他的线程。</li><li>当执行 <code>trace/watch/tt/redefine</code>等命令后，可以看到 JIT 线程活动变得更频繁。因为 JVM 热更新 class 字节码时清除了此 class 相关的 JIT 编译结果，需要重新编译。</li></ul><p>JVM 内部线程包括下面几种：</p><ul><li>JIT 编译线程: 如 <code>C2 CompilerThread0</code>, <code>C1 CompilerThread2</code></li><li>GC 线程: 如 <code>GC Thread0</code>, <code>G1 Young RemSet Sampling</code></li><li>其它内部线程: 如 <code>VM Periodic Task Thread</code>, <code>VM Thread</code>, <code>Service Thread</code></li></ul><h3 id="2-1-2-ognl-执行-ognl-表达式"><a href="#2-1-2-ognl-执行-ognl-表达式" class="headerlink" title="2.1.2 ognl - 执行 ognl 表达式"></a>2.1.2 ognl - 执行 ognl 表达式</h3><h4 id="2-1-2-1-作用"><a href="#2-1-2-1-作用" class="headerlink" title="2.1.2.1 作用"></a>2.1.2.1 作用</h4><p>执行 ognl 表达式</p><h4 id="2-1-2-2-参数说明"><a href="#2-1-2-2-参数说明" class="headerlink" title="2.1.2.2 参数说明"></a>2.1.2.2 参数说明</h4><table><thead><tr><th align="center"><strong>参数名称</strong></th><th align="center"><strong>参数说明</strong></th></tr></thead><tbody><tr><td align="center"><em>express</em></td><td align="center">执行的表达式</td></tr><tr><td align="center">[c:]</td><td align="center">执行表达式的 ClassLoader 的 hashcode，默认值是 SystemClassLoader</td></tr><tr><td align="center">[classLoaderClass:]</td><td align="center">指定执行表达式的 ClassLoader 的 class name</td></tr><tr><td align="center">[x]</td><td align="center">结果对象的展开层次，默认值 1</td></tr></tbody></table><h4 id="2-1-2-3-ognl-表达式说明"><a href="#2-1-2-3-ognl-表达式说明" class="headerlink" title="2.1.2.3 ognl 表达式说明"></a>2.1.2.3 ognl 表达式说明</h4><h5 id="2-1-2-3-1-语法"><a href="#2-1-2-3-1-语法" class="headerlink" title="2.1.2.3.1 语法"></a>2.1.2.3.1 语法</h5><p>基本的 OGNL 表达式非常简单。该语言的特性已经变得非常丰富，但是您通常不需要担心该语言中更复杂的部分：简单的情况仍然如此。例如，要获取对象的 name 属性，OGNL 表达式就是 <code>name</code>。要获取由 headline 属性返回的对象的 text 属性，OGNL 表达式是 <code>headline.text</code>。</p><p>OGNL 表达式的基本单元是导航链，通常简称为“链”。最简单的链条由以下部分组成：</p><table><thead><tr><th align="center"><strong>表达式元素部分</strong></th><th align="center"><strong>例子</strong></th></tr></thead><tbody><tr><td align="center">属性名称</td><td align="center">比如上面示例中的 <code>name</code>和 <code>headline.text</code>。</td></tr><tr><td align="center">方法调用</td><td align="center"><code>hashCode()</code>返回当前对象的哈希码</td></tr><tr><td align="center">数组索引</td><td align="center"><code>listeners[0]</code>返回当前对象 listeners 列表中的第一个</td></tr></tbody></table><p>所有 OGNL 表达式都在当前对象的上下文中求值，而链只是使用链中前一个链接的结果作为下一个链接的当前对象。你想把链条拉长多长都行。例如，这条链：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name.toCharArray()[0].numericValue.toString()</span><br></pre></td></tr></table></figure><p>这个表达式按照以下步骤进行计算：</p><ol><li>提取初始或根对象（用户通过 OGNL 上下文提供给 OGNL ）的 name 属性；</li><li>在结果字符串上调用 toCharArray() 方法；</li><li>从结果数组中提取第一个字符（索引为0的字符）；</li><li>从该字符获取 numericValue 属性(字符表示为 <code>Character</code>对象，<code>Character</code>类有一个名为 getNumericValue() 的方法)。</li><li>在结果 Integer 对象上调用 toString()。这个表达式的最终结果是最后一次 toString() 调用返回的 String。</li></ol><p>请注意，这个示例只能用于从对象获取值，而不能用于设置值。将上述表达式传递给 Ognl.setValue() 方法将导致InappropriateExpressionException被抛出，因为链中的最后一个链接既不是属性名也不是数组索引。</p><h5 id="2-1-2-3-2-表达式"><a href="#2-1-2-3-2-表达式" class="headerlink" title="2.1.2.3.2 表达式"></a>2.1.2.3.2 表达式</h5><p>本节概述了 OGNL 表达式元素的细节。</p><p><strong>常量</strong></p><p>OGNL 有以下几种常量：</p><ul><li>String 字面值，如 Java 中由单引号或双引号分隔，并带有完整的转义集；</li><li>Character 字面量，也与 Java 一样：由单引号分隔，也带有全套转义；</li><li>数字字面值，比 Java 多一些类型。除了 Java 的整型、长型、浮点数和双精度外，OGNL 还允许您指定带有“b”或“b”后缀的 BigDecimals，以及带有“h”或“h”后缀的 BigIntegers(想想“huge”——我们选择了“h”表示)；</li><li>Boolean：true 或者 false；</li><li>null</li></ul><p><strong>引用属性</strong></p><p>OGNL 在处理属性引用时以不同的方式对待不同类型的对象。映射将所有属性引用视为元素查找或存储，并将属性名称作为键。列表和数组类似地处理数字属性，以属性名作为索引，但处理字符串属性的方式与普通对象相同。普通对象（即所有其他类型的对象）只能通过使用“get”和“set”方法（或“is”和“set”）处理字符串属性，如果对象有这些方法，或者使用给定名称的字段处理字符串属性。</p><p>注意这里的新术语。属性“名称”可以是任何类型，而不仅仅是字符串。但是要引用非字符串属性，必须使用我们一直称为“索引”的符号。例如，要获取一个数组的长度，你可以使用这个表达式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.length</span><br></pre></td></tr></table></figure><p>但是要获取数组的元素0，你必须使用这样的表达式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[0]</span><br></pre></td></tr></table></figure><p><strong>索引</strong></p><p>如上所述，“索引”表示法实际上只是属性引用，尽管是一种计算形式的属性引用，而不是常数形式。<br>例如，OGNL在内部处理 <code>array.length</code>表达式与这个表达式完全相同：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[&quot;length&quot;]</span><br></pre></td></tr></table></figure><p>这个表达式会有相同的结果（尽管内部形式不同）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array[&quot;len&quot; + &quot;gth&quot;]</span><br></pre></td></tr></table></figure><h3 id="2-1-3-getstatic-查看类的静态属性"><a href="#2-1-3-getstatic-查看类的静态属性" class="headerlink" title="2.1.3 getstatic - 查看类的静态属性"></a>2.1.3 getstatic - 查看类的静态属性</h3><h3 id="2-1-4-heapdump-dump-java-heap-类似-jmap-命令的-heap-dump-功能"><a href="#2-1-4-heapdump-dump-java-heap-类似-jmap-命令的-heap-dump-功能" class="headerlink" title="2.1.4 heapdump - dump java heap, 类似 jmap 命令的 heap dump 功能"></a>2.1.4 heapdump - dump java heap, 类似 jmap 命令的 heap dump 功能</h3><h3 id="2-1-5-jvm-查看当前-JVM-的信息"><a href="#2-1-5-jvm-查看当前-JVM-的信息" class="headerlink" title="2.1.5 jvm - 查看当前 JVM 的信息"></a>2.1.5 jvm - 查看当前 JVM 的信息</h3><h3 id="2-1-6-logger-查看和修改-logger"><a href="#2-1-6-logger-查看和修改-logger" class="headerlink" title="2.1.6 logger - 查看和修改 logger"></a>2.1.6 logger - 查看和修改 logger</h3><h3 id="2-1-7-mbean-查看-Mbean-的信息"><a href="#2-1-7-mbean-查看-Mbean-的信息" class="headerlink" title="2.1.7 mbean - 查看 Mbean 的信息"></a>2.1.7 mbean - 查看 Mbean 的信息</h3><h3 id="2-1-8-memory-查看-JVM-的内存信息"><a href="#2-1-8-memory-查看-JVM-的内存信息" class="headerlink" title="2.1.8 memory - 查看 JVM 的内存信息"></a>2.1.8 memory - 查看 JVM 的内存信息</h3><h3 id="2-1-9-perfcounter-查看当前-JVM-的-Perf-Counter-信息"><a href="#2-1-9-perfcounter-查看当前-JVM-的-Perf-Counter-信息" class="headerlink" title="2.1.9 perfcounter - 查看当前 JVM 的 Perf Counter 信息"></a>2.1.9 perfcounter - 查看当前 JVM 的 Perf Counter 信息</h3><h3 id="2-1-10-sysenv-查看-JVM-的环境变量"><a href="#2-1-10-sysenv-查看-JVM-的环境变量" class="headerlink" title="2.1.10 sysenv - 查看 JVM 的环境变量"></a>2.1.10 sysenv - 查看 JVM 的环境变量</h3><h3 id="2-1-11-sysprop-查看和修改-JVM-的系统属性"><a href="#2-1-11-sysprop-查看和修改-JVM-的系统属性" class="headerlink" title="2.1.11 sysprop - 查看和修改 JVM 的系统属性"></a>2.1.11 sysprop - 查看和修改 JVM 的系统属性</h3><h3 id="2-1-12-thread-查看当前-JVM-的线程堆栈信息"><a href="#2-1-12-thread-查看当前-JVM-的线程堆栈信息" class="headerlink" title="2.1.12 thread - 查看当前 JVM 的线程堆栈信息"></a>2.1.12 thread - 查看当前 JVM 的线程堆栈信息</h3><h3 id="2-1-13-vmoption-查看和修改-JVM-里诊断相关的-option"><a href="#2-1-13-vmoption-查看和修改-JVM-里诊断相关的-option" class="headerlink" title="2.1.13 vmoption - 查看和修改 JVM 里诊断相关的 option"></a>2.1.13 vmoption - 查看和修改 JVM 里诊断相关的 option</h3><h3 id="2-1-14-vmtool-从-jvm-里查询对象"><a href="#2-1-14-vmtool-从-jvm-里查询对象" class="headerlink" title="2.1.14 vmtool - 从 jvm 里查询对象"></a>2.1.14 vmtool - 从 jvm 里查询对象</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 调试工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Arthas </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
